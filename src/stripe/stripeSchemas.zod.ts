// Generated by ts-to-zod
import { z } from "zod";

export const accountBacsDebitPaymentsSettingsSchema = z.object({
  display_name: z.string().optional(),
});

export const accountCapabilitiesSchema = z.object({
  acss_debit_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  afterpay_clearpay_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  au_becs_debit_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  bacs_debit_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  bancontact_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  boleto_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  card_issuing: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  card_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  cartes_bancaires_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  eps_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  fpx_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  giropay_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  grabpay_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  ideal_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  jcb_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  legacy_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  oxxo_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  p24_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  sepa_debit_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  sofort_payments: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  tax_reporting_us_1099_k: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  tax_reporting_us_1099_misc: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
  transfers: z
    .union([z.literal("active"), z.literal("inactive"), z.literal("pending")])
    .optional(),
});

export const accountControllerSchema = z.object({
  is_controller: z.boolean().optional(),
  type: z.union([z.literal("account"), z.literal("application")]).optional(),
});

export const accountDashboardSettingsSchema = z.object({
  display_name: z.string().optional().nullable(),
  timezone: z.string().optional().nullable(),
});

export const accountDeclineChargeOnSchema = z.object({
  avs_failure: z.boolean(),
  cvc_failure: z.boolean(),
});

export const accountLinkSchema = z.object({
  created: z.number(),
  expires_at: z.number(),
  object: z.literal("account_link"),
  url: z.string(),
});

export const accountPaymentsSettingsSchema = z.object({
  statement_descriptor: z.string().optional().nullable(),
  statement_descriptor_kana: z.string().optional().nullable(),
  statement_descriptor_kanji: z.string().optional().nullable(),
});

export const accountRequirementsErrorSchema = z.object({
  code: z.union([
    z.literal("invalid_address_city_state_postal_code"),
    z.literal("invalid_street_address"),
    z.literal("invalid_value_other"),
    z.literal("verification_document_address_mismatch"),
    z.literal("verification_document_address_missing"),
    z.literal("verification_document_corrupt"),
    z.literal("verification_document_country_not_supported"),
    z.literal("verification_document_dob_mismatch"),
    z.literal("verification_document_duplicate_type"),
    z.literal("verification_document_expired"),
    z.literal("verification_document_failed_copy"),
    z.literal("verification_document_failed_greyscale"),
    z.literal("verification_document_failed_other"),
    z.literal("verification_document_failed_test_mode"),
    z.literal("verification_document_fraudulent"),
    z.literal("verification_document_id_number_mismatch"),
    z.literal("verification_document_id_number_missing"),
    z.literal("verification_document_incomplete"),
    z.literal("verification_document_invalid"),
    z.literal("verification_document_issue_or_expiry_date_missing"),
    z.literal("verification_document_manipulated"),
    z.literal("verification_document_missing_back"),
    z.literal("verification_document_missing_front"),
    z.literal("verification_document_name_mismatch"),
    z.literal("verification_document_name_missing"),
    z.literal("verification_document_nationality_mismatch"),
    z.literal("verification_document_not_readable"),
    z.literal("verification_document_not_signed"),
    z.literal("verification_document_not_uploaded"),
    z.literal("verification_document_photo_mismatch"),
    z.literal("verification_document_too_large"),
    z.literal("verification_document_type_not_supported"),
    z.literal("verification_failed_address_match"),
    z.literal("verification_failed_business_iec_number"),
    z.literal("verification_failed_document_match"),
    z.literal("verification_failed_id_number_match"),
    z.literal("verification_failed_keyed_identity"),
    z.literal("verification_failed_keyed_match"),
    z.literal("verification_failed_name_match"),
    z.literal("verification_failed_other"),
    z.literal("verification_failed_tax_id_match"),
    z.literal("verification_failed_tax_id_not_issued"),
    z.literal("verification_missing_executives"),
    z.literal("verification_missing_owners"),
    z.literal("verification_requires_additional_memorandum_of_associations"),
  ]),
  reason: z.string(),
  requirement: z.string(),
});

export const accountSepaDebitPaymentsSettingsSchema = z.object({
  creditor_id: z.string().optional(),
});

export const accountTosAcceptanceSchema = z.object({
  date: z.number().optional().nullable(),
  ip: z.string().optional().nullable(),
  service_agreement: z.string().optional(),
  user_agent: z.string().optional().nullable(),
});

export const addressSchema = z.object({
  city: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  line1: z.string().optional().nullable(),
  line2: z.string().optional().nullable(),
  postal_code: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
});

export const applePayDomainSchema = z.object({
  created: z.number(),
  domain_name: z.string(),
  id: z.string(),
  livemode: z.boolean(),
  object: z.literal("apple_pay_domain"),
});

export const applicationSchema = z.object({
  id: z.string(),
  name: z.string().optional().nullable(),
  object: z.literal("application"),
});

export const automaticTaxSchema = z.object({
  enabled: z.boolean(),
  status: z
    .union([
      z.literal("complete"),
      z.literal("failed"),
      z.literal("requires_location_inputs"),
    ])
    .optional(),
});

export const balanceAmountBySourceTypeSchema = z.object({
  bank_account: z.number().optional(),
  card: z.number().optional(),
  fpx: z.number().optional(),
});

export const billingDetailsSchema = z.object({
  address: addressSchema.optional().nullable(),
  email: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
});

export const bitcoinTransactionSchema = z.object({
  amount: z.number(),
  bitcoin_amount: z.number(),
  created: z.number(),
  currency: z.string(),
  id: z.string(),
  object: z.literal("bitcoin_transaction"),
  receiver: z.string(),
});

export const cardIssuingAccountTermsOfServiceSchema = z.object({
  date: z.number().optional().nullable(),
  ip: z.string().optional().nullable(),
  user_agent: z.string().optional(),
});

export const cardMandatePaymentMethodDetailsSchema = z.object({});

export const chargeFraudDetailsSchema = z.object({
  stripe_report: z.string().optional(),
  user_report: z.string().optional(),
});

export const checkoutAcssDebitMandateOptionsSchema = z.object({
  custom_mandate_url: z.string().optional(),
  interval_description: z.string().optional().nullable(),
  payment_schedule: z
    .union([
      z.literal("combined"),
      z.literal("interval"),
      z.literal("sporadic"),
    ])
    .optional(),
  transaction_type: z
    .union([z.literal("business"), z.literal("personal")])
    .optional(),
});

export const checkoutAcssDebitPaymentMethodOptionsSchema = z.object({
  currency: z.union([z.literal("cad"), z.literal("usd")]).optional(),
  mandate_options: checkoutAcssDebitMandateOptionsSchema.optional(),
  verification_method: z
    .union([
      z.literal("automatic"),
      z.literal("instant"),
      z.literal("microdeposits"),
    ])
    .optional(),
});

export const countrySpecVerificationFieldDetailsSchema = z.object({
  additional: z.array(z.string()),
  minimum: z.array(z.string()),
});

export const countrySpecVerificationFieldsSchema = z.object({
  company: countrySpecVerificationFieldDetailsSchema,
  individual: countrySpecVerificationFieldDetailsSchema,
});

export const couponAppliesToSchema = z.object({
  products: z.array(z.string()),
});

export const customerTaxLocationSchema = z.object({
  country: z.string(),
  source: z.union([
    z.literal("billing_address"),
    z.literal("ip_address"),
    z.literal("payment_method"),
    z.literal("shipping_destination"),
  ]),
  state: z.string().optional().nullable(),
});

export const deletedAccountSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("account"),
});

export const deletedAlipayAccountSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("alipay_account"),
});

export const deletedApplePayDomainSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("apple_pay_domain"),
});

export const deletedBankAccountSchema = z.object({
  currency: z.string().optional().nullable(),
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("bank_account"),
});

export const deletedBitcoinReceiverSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("bitcoin_receiver"),
});

export const deletedCardSchema = z.object({
  currency: z.string().optional().nullable(),
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("card"),
});

export const deletedCouponSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("coupon"),
});

export const deletedCustomerSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("customer"),
});

export const deletedExternalAccountSchema = z.union([
  deletedBankAccountSchema,
  deletedCardSchema,
]);

export const deletedInvoiceSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("invoice"),
});

export const deletedInvoiceitemSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("invoiceitem"),
});

export const deletedPaymentSourceSchema = z.union([
  deletedAlipayAccountSchema,
  deletedBankAccountSchema,
  deletedBitcoinReceiverSchema,
  deletedCardSchema,
]);

export const deletedPersonSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("person"),
});

export const deletedPlanSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("plan"),
});

export const deletedPriceSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("price"),
});

export const deletedProductSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("product"),
});

export const deletedRadarValueListSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("radar.value_list"),
});

export const deletedRadarValueListItemSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("radar.value_list_item"),
});

export const deletedRecipientSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("recipient"),
});

export const deletedSkuSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("sku"),
});

export const deletedSubscriptionItemSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("subscription_item"),
});

export const deletedTaxIdSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("tax_id"),
});

export const deletedTerminalLocationSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("terminal.location"),
});

export const deletedTerminalReaderSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("terminal.reader"),
});

export const deletedWebhookEndpointSchema = z.object({
  deleted: z.literal(true),
  id: z.string(),
  object: z.literal("webhook_endpoint"),
});

export const deliveryEstimateSchema = z.object({
  date: z.string().optional(),
  earliest: z.string().optional(),
  latest: z.string().optional(),
  type: z.string(),
});

export const disputeEvidenceDetailsSchema = z.object({
  due_by: z.number().optional().nullable(),
  has_evidence: z.boolean(),
  past_due: z.boolean(),
  submission_count: z.number(),
});

export const ephemeralKeySchema = z.object({
  created: z.number(),
  expires: z.number(),
  id: z.string(),
  livemode: z.boolean(),
  object: z.literal("ephemeral_key"),
  secret: z.string().optional(),
});

export const exchangeRateSchema = z.object({
  id: z.string(),
  object: z.literal("exchange_rate"),
  rates: z.record(z.number()),
});

export const feeSchema = z.object({
  amount: z.number(),
  application: z.string().optional().nullable(),
  currency: z.string(),
  description: z.string().optional().nullable(),
  type: z.string(),
});

export const financialReportingFinanceReportRunRunParametersSchema = z.object({
  columns: z.array(z.string()).optional(),
  connected_account: z.string().optional(),
  currency: z.string().optional(),
  interval_end: z.number().optional(),
  interval_start: z.number().optional(),
  payout: z.string().optional(),
  reporting_category: z.string().optional(),
  timezone: z.string().optional(),
});

export const gelatoDataDocumentReportDateOfBirthSchema = z.object({
  day: z.number().optional().nullable(),
  month: z.number().optional().nullable(),
  year: z.number().optional().nullable(),
});

export const gelatoDataDocumentReportExpirationDateSchema = z.object({
  day: z.number().optional().nullable(),
  month: z.number().optional().nullable(),
  year: z.number().optional().nullable(),
});

export const gelatoDataDocumentReportIssuedDateSchema = z.object({
  day: z.number().optional().nullable(),
  month: z.number().optional().nullable(),
  year: z.number().optional().nullable(),
});

export const gelatoDataIdNumberReportDateSchema = z.object({
  day: z.number().optional().nullable(),
  month: z.number().optional().nullable(),
  year: z.number().optional().nullable(),
});

export const gelatoDataVerifiedOutputsDateSchema = z.object({
  day: z.number().optional().nullable(),
  month: z.number().optional().nullable(),
  year: z.number().optional().nullable(),
});

export const gelatoDocumentReportErrorSchema = z.object({
  code: z
    .union([
      z.literal("document_expired"),
      z.literal("document_type_not_supported"),
      z.literal("document_unverified_other"),
    ])
    .optional(),
  reason: z.string().optional().nullable(),
});

export const gelatoIdNumberReportErrorSchema = z.object({
  code: z
    .union([
      z.literal("id_number_insufficient_document_data"),
      z.literal("id_number_mismatch"),
      z.literal("id_number_unverified_other"),
    ])
    .optional(),
  reason: z.string().optional().nullable(),
});

export const gelatoReportDocumentOptionsSchema = z.object({
  allowed_types: z
    .array(
      z.union([
        z.literal("driving_license"),
        z.literal("id_card"),
        z.literal("passport"),
      ])
    )
    .optional(),
  require_id_number: z.boolean().optional(),
  require_live_capture: z.boolean().optional(),
  require_matching_selfie: z.boolean().optional(),
});

export const gelatoReportIdNumberOptionsSchema = z.object({});

export const gelatoSelfieReportErrorSchema = z.object({
  code: z
    .union([
      z.literal("selfie_document_missing_photo"),
      z.literal("selfie_face_mismatch"),
      z.literal("selfie_manipulated"),
      z.literal("selfie_unverified_other"),
    ])
    .optional(),
  reason: z.string().optional().nullable(),
});

export const gelatoSessionDocumentOptionsSchema = z.object({
  allowed_types: z
    .array(
      z.union([
        z.literal("driving_license"),
        z.literal("id_card"),
        z.literal("passport"),
      ])
    )
    .optional(),
  require_id_number: z.boolean().optional(),
  require_live_capture: z.boolean().optional(),
  require_matching_selfie: z.boolean().optional(),
});

export const gelatoSessionIdNumberOptionsSchema = z.object({});

export const gelatoSessionLastErrorSchema = z.object({
  code: z
    .union([
      z.literal("abandoned"),
      z.literal("consent_declined"),
      z.literal("country_not_supported"),
      z.literal("device_not_supported"),
      z.literal("document_expired"),
      z.literal("document_type_not_supported"),
      z.literal("document_unverified_other"),
      z.literal("id_number_insufficient_document_data"),
      z.literal("id_number_mismatch"),
      z.literal("id_number_unverified_other"),
      z.literal("selfie_document_missing_photo"),
      z.literal("selfie_face_mismatch"),
      z.literal("selfie_manipulated"),
      z.literal("selfie_unverified_other"),
      z.literal("under_supported_age"),
    ])
    .optional(),
  reason: z.string().optional().nullable(),
});

export const gelatoVerificationReportOptionsSchema = z.object({
  document: gelatoReportDocumentOptionsSchema.optional(),
  id_number: gelatoReportIdNumberOptionsSchema.optional(),
});

export const gelatoVerificationSessionOptionsSchema = z.object({
  document: gelatoSessionDocumentOptionsSchema.optional(),
  id_number: gelatoSessionIdNumberOptionsSchema.optional(),
});

export const gelatoVerifiedOutputsSchema = z.object({
  address: addressSchema.optional().nullable(),
  dob: gelatoDataVerifiedOutputsDateSchema.optional().nullable(),
  first_name: z.string().optional().nullable(),
  id_number: z.string().optional().nullable(),
  id_number_type: z
    .union([z.literal("br_cpf"), z.literal("sg_nric"), z.literal("us_ssn")])
    .optional(),
  last_name: z.string().optional().nullable(),
});

export const invoiceItemThresholdReasonSchema = z.object({
  line_item_ids: z.array(z.string()),
  usage_gte: z.number(),
});

export const invoiceLineItemPeriodSchema = z.object({
  end: z.number(),
  start: z.number(),
});

export const invoicePaymentMethodOptionsBancontactSchema = z.object({
  preferred_language: z.union([
    z.literal("de"),
    z.literal("en"),
    z.literal("fr"),
    z.literal("nl"),
  ]),
});

export const invoicePaymentMethodOptionsCardSchema = z.object({
  request_three_d_secure: z
    .union([z.literal("any"), z.literal("automatic")])
    .optional(),
});

export const invoiceSettingCustomFieldSchema = z.object({
  name: z.string(),
  value: z.string(),
});

export const invoiceSettingQuoteSettingSchema = z.object({
  days_until_due: z.number().optional().nullable(),
});

export const invoiceSettingSubscriptionScheduleSettingSchema = z.object({
  days_until_due: z.number().optional().nullable(),
});

export const invoiceThresholdReasonSchema = z.object({
  amount_gte: z.number().optional().nullable(),
  item_reasons: z.array(invoiceItemThresholdReasonSchema),
});

export const invoicesPaymentMethodOptionsSchema = z.object({
  bancontact: invoicePaymentMethodOptionsBancontactSchema.optional().nullable(),
  card: invoicePaymentMethodOptionsCardSchema.optional().nullable(),
});

export const invoicesPaymentSettingsSchema = z.object({
  payment_method_options: invoicesPaymentMethodOptionsSchema
    .optional()
    .nullable(),
  payment_method_types: z
    .array(
      z.union([
        z.literal("ach_credit_transfer"),
        z.literal("ach_debit"),
        z.literal("au_becs_debit"),
        z.literal("bacs_debit"),
        z.literal("bancontact"),
        z.literal("boleto"),
        z.literal("card"),
        z.literal("fpx"),
        z.literal("giropay"),
        z.literal("ideal"),
        z.literal("sepa_debit"),
        z.literal("sofort"),
        z.literal("wechat_pay"),
      ])
    )
    .optional()
    .nullable(),
});

export const invoicesResourceInvoiceTaxIdSchema = z.object({
  type: z.union([
    z.literal("ae_trn"),
    z.literal("au_abn"),
    z.literal("au_arn"),
    z.literal("br_cnpj"),
    z.literal("br_cpf"),
    z.literal("ca_bn"),
    z.literal("ca_gst_hst"),
    z.literal("ca_pst_bc"),
    z.literal("ca_pst_mb"),
    z.literal("ca_pst_sk"),
    z.literal("ca_qst"),
    z.literal("ch_vat"),
    z.literal("cl_tin"),
    z.literal("es_cif"),
    z.literal("eu_vat"),
    z.literal("gb_vat"),
    z.literal("hk_br"),
    z.literal("id_npwp"),
    z.literal("il_vat"),
    z.literal("in_gst"),
    z.literal("jp_cn"),
    z.literal("jp_rn"),
    z.literal("kr_brn"),
    z.literal("li_uid"),
    z.literal("mx_rfc"),
    z.literal("my_frp"),
    z.literal("my_itn"),
    z.literal("my_sst"),
    z.literal("no_vat"),
    z.literal("nz_gst"),
    z.literal("ru_inn"),
    z.literal("ru_kpp"),
    z.literal("sa_vat"),
    z.literal("sg_gst"),
    z.literal("sg_uen"),
    z.literal("th_vat"),
    z.literal("tw_vat"),
    z.literal("unknown"),
    z.literal("us_ein"),
    z.literal("za_vat"),
  ]),
  value: z.string().optional().nullable(),
});

export const invoicesStatusTransitionsSchema = z.object({
  finalized_at: z.number().optional().nullable(),
  marked_uncollectible_at: z.number().optional().nullable(),
  paid_at: z.number().optional().nullable(),
  voided_at: z.number().optional().nullable(),
});

export const issuingSettlementSchema = z.object({
  bin: z.string(),
  clearing_date: z.number(),
  created: z.number(),
  currency: z.string(),
  id: z.string(),
  interchange_fees: z.number(),
  livemode: z.boolean(),
  metadata: z.record(z.string()),
  net_total: z.number(),
  network: z.literal("visa"),
  network_fees: z.number(),
  network_settlement_identifier: z.string(),
  object: z.literal("issuing.settlement"),
  settlement_service: z.string(),
  transaction_count: z.number(),
  transaction_volume: z.number(),
});

export const issuingAuthorizationAmountDetailsSchema = z.object({
  atm_fee: z.number().optional().nullable(),
});

export const issuingAuthorizationMerchantDataSchema = z.object({
  category: z.string(),
  category_code: z.string(),
  city: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  network_id: z.string(),
  postal_code: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
});

export const issuingAuthorizationPendingRequestSchema = z.object({
  amount: z.number(),
  amount_details: issuingAuthorizationAmountDetailsSchema.optional().nullable(),
  currency: z.string(),
  is_amount_controllable: z.boolean(),
  merchant_amount: z.number(),
  merchant_currency: z.string(),
});

export const issuingAuthorizationRequestSchema = z.object({
  amount: z.number(),
  amount_details: issuingAuthorizationAmountDetailsSchema.optional().nullable(),
  approved: z.boolean(),
  created: z.number(),
  currency: z.string(),
  merchant_amount: z.number(),
  merchant_currency: z.string(),
  reason: z.union([
    z.literal("account_disabled"),
    z.literal("card_active"),
    z.literal("card_inactive"),
    z.literal("cardholder_inactive"),
    z.literal("cardholder_verification_required"),
    z.literal("insufficient_funds"),
    z.literal("not_allowed"),
    z.literal("spending_controls"),
    z.literal("suspected_fraud"),
    z.literal("verification_failed"),
    z.literal("webhook_approved"),
    z.literal("webhook_declined"),
    z.literal("webhook_timeout"),
  ]),
});

export const issuingAuthorizationVerificationDataSchema = z.object({
  address_line1_check: z.union([
    z.literal("match"),
    z.literal("mismatch"),
    z.literal("not_provided"),
  ]),
  address_postal_code_check: z.union([
    z.literal("match"),
    z.literal("mismatch"),
    z.literal("not_provided"),
  ]),
  cvc_check: z.union([
    z.literal("match"),
    z.literal("mismatch"),
    z.literal("not_provided"),
  ]),
  expiry_check: z.union([
    z.literal("match"),
    z.literal("mismatch"),
    z.literal("not_provided"),
  ]),
});

export const issuingCardShippingSchema = z.object({
  address: addressSchema,
  carrier: z
    .union([
      z.literal("dhl"),
      z.literal("fedex"),
      z.literal("royal_mail"),
      z.literal("usps"),
    ])
    .optional(),
  eta: z.number().optional().nullable(),
  name: z.string(),
  service: z.union([
    z.literal("express"),
    z.literal("priority"),
    z.literal("standard"),
  ]),
  status: z
    .union([
      z.literal("canceled"),
      z.literal("delivered"),
      z.literal("failure"),
      z.literal("pending"),
      z.literal("returned"),
      z.literal("shipped"),
    ])
    .optional(),
  tracking_number: z.string().optional().nullable(),
  tracking_url: z.string().optional().nullable(),
  type: z.union([z.literal("bulk"), z.literal("individual")]),
});

export const issuingCardSpendingLimitSchema = z.object({
  amount: z.number(),
  categories: z
    .array(
      z.union([
        z.literal("ac_refrigeration_repair"),
        z.literal("accounting_bookkeeping_services"),
        z.literal("advertising_services"),
        z.literal("agricultural_cooperative"),
        z.literal("airlines_air_carriers"),
        z.literal("airports_flying_fields"),
        z.literal("ambulance_services"),
        z.literal("amusement_parks_carnivals"),
        z.literal("antique_reproductions"),
        z.literal("antique_shops"),
        z.literal("aquariums"),
        z.literal("architectural_surveying_services"),
        z.literal("art_dealers_and_galleries"),
        z.literal("artists_supply_and_craft_shops"),
        z.literal("auto_and_home_supply_stores"),
        z.literal("auto_body_repair_shops"),
        z.literal("auto_paint_shops"),
        z.literal("auto_service_shops"),
        z.literal("automated_cash_disburse"),
        z.literal("automated_fuel_dispensers"),
        z.literal("automobile_associations"),
        z.literal("automotive_parts_and_accessories_stores"),
        z.literal("automotive_tire_stores"),
        z.literal("bail_and_bond_payments"),
        z.literal("bakeries"),
        z.literal("bands_orchestras"),
        z.literal("barber_and_beauty_shops"),
        z.literal("betting_casino_gambling"),
        z.literal("bicycle_shops"),
        z.literal("billiard_pool_establishments"),
        z.literal("boat_dealers"),
        z.literal("boat_rentals_and_leases"),
        z.literal("book_stores"),
        z.literal("books_periodicals_and_newspapers"),
        z.literal("bowling_alleys"),
        z.literal("bus_lines"),
        z.literal("business_secretarial_schools"),
        z.literal("buying_shopping_services"),
        z.literal("cable_satellite_and_other_pay_television_and_radio"),
        z.literal("camera_and_photographic_supply_stores"),
        z.literal("candy_nut_and_confectionery_stores"),
        z.literal("car_and_truck_dealers_new_used"),
        z.literal("car_and_truck_dealers_used_only"),
        z.literal("car_rental_agencies"),
        z.literal("car_washes"),
        z.literal("carpentry_services"),
        z.literal("carpet_upholstery_cleaning"),
        z.literal("caterers"),
        z.literal("charitable_and_social_service_organizations_fundraising"),
        z.literal("chemicals_and_allied_products"),
        z.literal("child_care_services"),
        z.literal("childrens_and_infants_wear_stores"),
        z.literal("chiropodists_podiatrists"),
        z.literal("chiropractors"),
        z.literal("cigar_stores_and_stands"),
        z.literal("civic_social_fraternal_associations"),
        z.literal("cleaning_and_maintenance"),
        z.literal("clothing_rental"),
        z.literal("colleges_universities"),
        z.literal("commercial_equipment"),
        z.literal("commercial_footwear"),
        z.literal("commercial_photography_art_and_graphics"),
        z.literal("commuter_transport_and_ferries"),
        z.literal("computer_network_services"),
        z.literal("computer_programming"),
        z.literal("computer_repair"),
        z.literal("computer_software_stores"),
        z.literal("computers_peripherals_and_software"),
        z.literal("concrete_work_services"),
        z.literal("construction_materials"),
        z.literal("consulting_public_relations"),
        z.literal("correspondence_schools"),
        z.literal("cosmetic_stores"),
        z.literal("counseling_services"),
        z.literal("country_clubs"),
        z.literal("courier_services"),
        z.literal("court_costs"),
        z.literal("credit_reporting_agencies"),
        z.literal("cruise_lines"),
        z.literal("dairy_products_stores"),
        z.literal("dance_hall_studios_schools"),
        z.literal("dating_escort_services"),
        z.literal("dentists_orthodontists"),
        z.literal("department_stores"),
        z.literal("detective_agencies"),
        z.literal("digital_goods_applications"),
        z.literal("digital_goods_games"),
        z.literal("digital_goods_large_volume"),
        z.literal("digital_goods_media"),
        z.literal("direct_marketing_catalog_merchant"),
        z.literal("direct_marketing_combination_catalog_and_retail_merchant"),
        z.literal("direct_marketing_inbound_telemarketing"),
        z.literal("direct_marketing_insurance_services"),
        z.literal("direct_marketing_other"),
        z.literal("direct_marketing_outbound_telemarketing"),
        z.literal("direct_marketing_subscription"),
        z.literal("direct_marketing_travel"),
        z.literal("discount_stores"),
        z.literal("doctors"),
        z.literal("door_to_door_sales"),
        z.literal("drapery_window_covering_and_upholstery_stores"),
        z.literal("drinking_places"),
        z.literal("drug_stores_and_pharmacies"),
        z.literal("drugs_drug_proprietaries_and_druggist_sundries"),
        z.literal("dry_cleaners"),
        z.literal("durable_goods"),
        z.literal("duty_free_stores"),
        z.literal("eating_places_restaurants"),
        z.literal("educational_services"),
        z.literal("electric_razor_stores"),
        z.literal("electrical_parts_and_equipment"),
        z.literal("electrical_services"),
        z.literal("electronics_repair_shops"),
        z.literal("electronics_stores"),
        z.literal("elementary_secondary_schools"),
        z.literal("employment_temp_agencies"),
        z.literal("equipment_rental"),
        z.literal("exterminating_services"),
        z.literal("family_clothing_stores"),
        z.literal("fast_food_restaurants"),
        z.literal("financial_institutions"),
        z.literal("fines_government_administrative_entities"),
        z.literal("fireplace_fireplace_screens_and_accessories_stores"),
        z.literal("floor_covering_stores"),
        z.literal("florists"),
        z.literal("florists_supplies_nursery_stock_and_flowers"),
        z.literal("freezer_and_locker_meat_provisioners"),
        z.literal("fuel_dealers_non_automotive"),
        z.literal("funeral_services_crematories"),
        z.literal(
          "furniture_home_furnishings_and_equipment_stores_except_appliances"
        ),
        z.literal("furniture_repair_refinishing"),
        z.literal("furriers_and_fur_shops"),
        z.literal("general_services"),
        z.literal("gift_card_novelty_and_souvenir_shops"),
        z.literal("glass_paint_and_wallpaper_stores"),
        z.literal("glassware_crystal_stores"),
        z.literal("golf_courses_public"),
        z.literal("government_services"),
        z.literal("grocery_stores_supermarkets"),
        z.literal("hardware_equipment_and_supplies"),
        z.literal("hardware_stores"),
        z.literal("health_and_beauty_spas"),
        z.literal("hearing_aids_sales_and_supplies"),
        z.literal("heating_plumbing_a_c"),
        z.literal("hobby_toy_and_game_shops"),
        z.literal("home_supply_warehouse_stores"),
        z.literal("hospitals"),
        z.literal("hotels_motels_and_resorts"),
        z.literal("household_appliance_stores"),
        z.literal("industrial_supplies"),
        z.literal("information_retrieval_services"),
        z.literal("insurance_default"),
        z.literal("insurance_underwriting_premiums"),
        z.literal("intra_company_purchases"),
        z.literal("jewelry_stores_watches_clocks_and_silverware_stores"),
        z.literal("landscaping_services"),
        z.literal("laundries"),
        z.literal("laundry_cleaning_services"),
        z.literal("legal_services_attorneys"),
        z.literal("luggage_and_leather_goods_stores"),
        z.literal("lumber_building_materials_stores"),
        z.literal("manual_cash_disburse"),
        z.literal("marinas_service_and_supplies"),
        z.literal("masonry_stonework_and_plaster"),
        z.literal("massage_parlors"),
        z.literal("medical_and_dental_labs"),
        z.literal(
          "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        ),
        z.literal("medical_services"),
        z.literal("membership_organizations"),
        z.literal("mens_and_boys_clothing_and_accessories_stores"),
        z.literal("mens_womens_clothing_stores"),
        z.literal("metal_service_centers"),
        z.literal("miscellaneous"),
        z.literal("miscellaneous_apparel_and_accessory_shops"),
        z.literal("miscellaneous_auto_dealers"),
        z.literal("miscellaneous_business_services"),
        z.literal("miscellaneous_food_stores"),
        z.literal("miscellaneous_general_merchandise"),
        z.literal("miscellaneous_general_services"),
        z.literal("miscellaneous_home_furnishing_specialty_stores"),
        z.literal("miscellaneous_publishing_and_printing"),
        z.literal("miscellaneous_recreation_services"),
        z.literal("miscellaneous_repair_shops"),
        z.literal("miscellaneous_specialty_retail"),
        z.literal("mobile_home_dealers"),
        z.literal("motion_picture_theaters"),
        z.literal("motor_freight_carriers_and_trucking"),
        z.literal("motor_homes_dealers"),
        z.literal("motor_vehicle_supplies_and_new_parts"),
        z.literal("motorcycle_shops_and_dealers"),
        z.literal("motorcycle_shops_dealers"),
        z.literal("music_stores_musical_instruments_pianos_and_sheet_music"),
        z.literal("news_dealers_and_newsstands"),
        z.literal("non_fi_money_orders"),
        z.literal("non_fi_stored_value_card_purchase_load"),
        z.literal("nondurable_goods"),
        z.literal("nurseries_lawn_and_garden_supply_stores"),
        z.literal("nursing_personal_care"),
        z.literal("office_and_commercial_furniture"),
        z.literal("opticians_eyeglasses"),
        z.literal("optometrists_ophthalmologist"),
        z.literal("orthopedic_goods_prosthetic_devices"),
        z.literal("osteopaths"),
        z.literal("package_stores_beer_wine_and_liquor"),
        z.literal("paints_varnishes_and_supplies"),
        z.literal("parking_lots_garages"),
        z.literal("passenger_railways"),
        z.literal("pawn_shops"),
        z.literal("pet_shops_pet_food_and_supplies"),
        z.literal("petroleum_and_petroleum_products"),
        z.literal("photo_developing"),
        z.literal("photographic_photocopy_microfilm_equipment_and_supplies"),
        z.literal("photographic_studios"),
        z.literal("picture_video_production"),
        z.literal("piece_goods_notions_and_other_dry_goods"),
        z.literal("plumbing_heating_equipment_and_supplies"),
        z.literal("political_organizations"),
        z.literal("postal_services_government_only"),
        z.literal("precious_stones_and_metals_watches_and_jewelry"),
        z.literal("professional_services"),
        z.literal("public_warehousing_and_storage"),
        z.literal("quick_copy_repro_and_blueprint"),
        z.literal("railroads"),
        z.literal("real_estate_agents_and_managers_rentals"),
        z.literal("record_stores"),
        z.literal("recreational_vehicle_rentals"),
        z.literal("religious_goods_stores"),
        z.literal("religious_organizations"),
        z.literal("roofing_siding_sheet_metal"),
        z.literal("secretarial_support_services"),
        z.literal("security_brokers_dealers"),
        z.literal("service_stations"),
        z.literal("sewing_needlework_fabric_and_piece_goods_stores"),
        z.literal("shoe_repair_hat_cleaning"),
        z.literal("shoe_stores"),
        z.literal("small_appliance_repair"),
        z.literal("snowmobile_dealers"),
        z.literal("special_trade_services"),
        z.literal("specialty_cleaning"),
        z.literal("sporting_goods_stores"),
        z.literal("sporting_recreation_camps"),
        z.literal("sports_and_riding_apparel_stores"),
        z.literal("sports_clubs_fields"),
        z.literal("stamp_and_coin_stores"),
        z.literal("stationary_office_supplies_printing_and_writing_paper"),
        z.literal("stationery_stores_office_and_school_supply_stores"),
        z.literal("swimming_pools_sales"),
        z.literal("t_ui_travel_germany"),
        z.literal("tailors_alterations"),
        z.literal("tax_payments_government_agencies"),
        z.literal("tax_preparation_services"),
        z.literal("taxicabs_limousines"),
        z.literal("telecommunication_equipment_and_telephone_sales"),
        z.literal("telecommunication_services"),
        z.literal("telegraph_services"),
        z.literal("tent_and_awning_shops"),
        z.literal("testing_laboratories"),
        z.literal("theatrical_ticket_agencies"),
        z.literal("timeshares"),
        z.literal("tire_retreading_and_repair"),
        z.literal("tolls_bridge_fees"),
        z.literal("tourist_attractions_and_exhibits"),
        z.literal("towing_services"),
        z.literal("trailer_parks_campgrounds"),
        z.literal("transportation_services"),
        z.literal("travel_agencies_tour_operators"),
        z.literal("truck_stop_iteration"),
        z.literal("truck_utility_trailer_rentals"),
        z.literal("typesetting_plate_making_and_related_services"),
        z.literal("typewriter_stores"),
        z.literal("u_s_federal_government_agencies_or_departments"),
        z.literal("uniforms_commercial_clothing"),
        z.literal("used_merchandise_and_secondhand_stores"),
        z.literal("utilities"),
        z.literal("variety_stores"),
        z.literal("veterinary_services"),
        z.literal("video_amusement_game_supplies"),
        z.literal("video_game_arcades"),
        z.literal("video_tape_rental_stores"),
        z.literal("vocational_trade_schools"),
        z.literal("watch_jewelry_repair"),
        z.literal("welding_repair"),
        z.literal("wholesale_clubs"),
        z.literal("wig_and_toupee_stores"),
        z.literal("wires_money_orders"),
        z.literal("womens_accessory_and_specialty_shops"),
        z.literal("womens_ready_to_wear_stores"),
        z.literal("wrecking_and_salvage_yards"),
      ])
    )
    .optional()
    .nullable(),
  interval: z.union([
    z.literal("all_time"),
    z.literal("daily"),
    z.literal("monthly"),
    z.literal("per_authorization"),
    z.literal("weekly"),
    z.literal("yearly"),
  ]),
});

export const issuingCardholderAddressSchema = z.object({
  address: addressSchema,
});

export const issuingCardholderCompanySchema = z.object({
  tax_id_provided: z.boolean(),
});

export const issuingCardholderIndividualDobSchema = z.object({
  day: z.number().optional().nullable(),
  month: z.number().optional().nullable(),
  year: z.number().optional().nullable(),
});

export const issuingCardholderRequirementsSchema = z.object({
  disabled_reason: z
    .union([
      z.literal("listed"),
      z.literal("rejected.listed"),
      z.literal("under_review"),
    ])
    .optional(),
  past_due: z
    .array(
      z.union([
        z.literal("company.tax_id"),
        z.literal("individual.dob.day"),
        z.literal("individual.dob.month"),
        z.literal("individual.dob.year"),
        z.literal("individual.first_name"),
        z.literal("individual.last_name"),
        z.literal("individual.verification.document"),
      ])
    )
    .optional()
    .nullable(),
});

export const issuingCardholderSpendingLimitSchema = z.object({
  amount: z.number(),
  categories: z
    .array(
      z.union([
        z.literal("ac_refrigeration_repair"),
        z.literal("accounting_bookkeeping_services"),
        z.literal("advertising_services"),
        z.literal("agricultural_cooperative"),
        z.literal("airlines_air_carriers"),
        z.literal("airports_flying_fields"),
        z.literal("ambulance_services"),
        z.literal("amusement_parks_carnivals"),
        z.literal("antique_reproductions"),
        z.literal("antique_shops"),
        z.literal("aquariums"),
        z.literal("architectural_surveying_services"),
        z.literal("art_dealers_and_galleries"),
        z.literal("artists_supply_and_craft_shops"),
        z.literal("auto_and_home_supply_stores"),
        z.literal("auto_body_repair_shops"),
        z.literal("auto_paint_shops"),
        z.literal("auto_service_shops"),
        z.literal("automated_cash_disburse"),
        z.literal("automated_fuel_dispensers"),
        z.literal("automobile_associations"),
        z.literal("automotive_parts_and_accessories_stores"),
        z.literal("automotive_tire_stores"),
        z.literal("bail_and_bond_payments"),
        z.literal("bakeries"),
        z.literal("bands_orchestras"),
        z.literal("barber_and_beauty_shops"),
        z.literal("betting_casino_gambling"),
        z.literal("bicycle_shops"),
        z.literal("billiard_pool_establishments"),
        z.literal("boat_dealers"),
        z.literal("boat_rentals_and_leases"),
        z.literal("book_stores"),
        z.literal("books_periodicals_and_newspapers"),
        z.literal("bowling_alleys"),
        z.literal("bus_lines"),
        z.literal("business_secretarial_schools"),
        z.literal("buying_shopping_services"),
        z.literal("cable_satellite_and_other_pay_television_and_radio"),
        z.literal("camera_and_photographic_supply_stores"),
        z.literal("candy_nut_and_confectionery_stores"),
        z.literal("car_and_truck_dealers_new_used"),
        z.literal("car_and_truck_dealers_used_only"),
        z.literal("car_rental_agencies"),
        z.literal("car_washes"),
        z.literal("carpentry_services"),
        z.literal("carpet_upholstery_cleaning"),
        z.literal("caterers"),
        z.literal("charitable_and_social_service_organizations_fundraising"),
        z.literal("chemicals_and_allied_products"),
        z.literal("child_care_services"),
        z.literal("childrens_and_infants_wear_stores"),
        z.literal("chiropodists_podiatrists"),
        z.literal("chiropractors"),
        z.literal("cigar_stores_and_stands"),
        z.literal("civic_social_fraternal_associations"),
        z.literal("cleaning_and_maintenance"),
        z.literal("clothing_rental"),
        z.literal("colleges_universities"),
        z.literal("commercial_equipment"),
        z.literal("commercial_footwear"),
        z.literal("commercial_photography_art_and_graphics"),
        z.literal("commuter_transport_and_ferries"),
        z.literal("computer_network_services"),
        z.literal("computer_programming"),
        z.literal("computer_repair"),
        z.literal("computer_software_stores"),
        z.literal("computers_peripherals_and_software"),
        z.literal("concrete_work_services"),
        z.literal("construction_materials"),
        z.literal("consulting_public_relations"),
        z.literal("correspondence_schools"),
        z.literal("cosmetic_stores"),
        z.literal("counseling_services"),
        z.literal("country_clubs"),
        z.literal("courier_services"),
        z.literal("court_costs"),
        z.literal("credit_reporting_agencies"),
        z.literal("cruise_lines"),
        z.literal("dairy_products_stores"),
        z.literal("dance_hall_studios_schools"),
        z.literal("dating_escort_services"),
        z.literal("dentists_orthodontists"),
        z.literal("department_stores"),
        z.literal("detective_agencies"),
        z.literal("digital_goods_applications"),
        z.literal("digital_goods_games"),
        z.literal("digital_goods_large_volume"),
        z.literal("digital_goods_media"),
        z.literal("direct_marketing_catalog_merchant"),
        z.literal("direct_marketing_combination_catalog_and_retail_merchant"),
        z.literal("direct_marketing_inbound_telemarketing"),
        z.literal("direct_marketing_insurance_services"),
        z.literal("direct_marketing_other"),
        z.literal("direct_marketing_outbound_telemarketing"),
        z.literal("direct_marketing_subscription"),
        z.literal("direct_marketing_travel"),
        z.literal("discount_stores"),
        z.literal("doctors"),
        z.literal("door_to_door_sales"),
        z.literal("drapery_window_covering_and_upholstery_stores"),
        z.literal("drinking_places"),
        z.literal("drug_stores_and_pharmacies"),
        z.literal("drugs_drug_proprietaries_and_druggist_sundries"),
        z.literal("dry_cleaners"),
        z.literal("durable_goods"),
        z.literal("duty_free_stores"),
        z.literal("eating_places_restaurants"),
        z.literal("educational_services"),
        z.literal("electric_razor_stores"),
        z.literal("electrical_parts_and_equipment"),
        z.literal("electrical_services"),
        z.literal("electronics_repair_shops"),
        z.literal("electronics_stores"),
        z.literal("elementary_secondary_schools"),
        z.literal("employment_temp_agencies"),
        z.literal("equipment_rental"),
        z.literal("exterminating_services"),
        z.literal("family_clothing_stores"),
        z.literal("fast_food_restaurants"),
        z.literal("financial_institutions"),
        z.literal("fines_government_administrative_entities"),
        z.literal("fireplace_fireplace_screens_and_accessories_stores"),
        z.literal("floor_covering_stores"),
        z.literal("florists"),
        z.literal("florists_supplies_nursery_stock_and_flowers"),
        z.literal("freezer_and_locker_meat_provisioners"),
        z.literal("fuel_dealers_non_automotive"),
        z.literal("funeral_services_crematories"),
        z.literal(
          "furniture_home_furnishings_and_equipment_stores_except_appliances"
        ),
        z.literal("furniture_repair_refinishing"),
        z.literal("furriers_and_fur_shops"),
        z.literal("general_services"),
        z.literal("gift_card_novelty_and_souvenir_shops"),
        z.literal("glass_paint_and_wallpaper_stores"),
        z.literal("glassware_crystal_stores"),
        z.literal("golf_courses_public"),
        z.literal("government_services"),
        z.literal("grocery_stores_supermarkets"),
        z.literal("hardware_equipment_and_supplies"),
        z.literal("hardware_stores"),
        z.literal("health_and_beauty_spas"),
        z.literal("hearing_aids_sales_and_supplies"),
        z.literal("heating_plumbing_a_c"),
        z.literal("hobby_toy_and_game_shops"),
        z.literal("home_supply_warehouse_stores"),
        z.literal("hospitals"),
        z.literal("hotels_motels_and_resorts"),
        z.literal("household_appliance_stores"),
        z.literal("industrial_supplies"),
        z.literal("information_retrieval_services"),
        z.literal("insurance_default"),
        z.literal("insurance_underwriting_premiums"),
        z.literal("intra_company_purchases"),
        z.literal("jewelry_stores_watches_clocks_and_silverware_stores"),
        z.literal("landscaping_services"),
        z.literal("laundries"),
        z.literal("laundry_cleaning_services"),
        z.literal("legal_services_attorneys"),
        z.literal("luggage_and_leather_goods_stores"),
        z.literal("lumber_building_materials_stores"),
        z.literal("manual_cash_disburse"),
        z.literal("marinas_service_and_supplies"),
        z.literal("masonry_stonework_and_plaster"),
        z.literal("massage_parlors"),
        z.literal("medical_and_dental_labs"),
        z.literal(
          "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        ),
        z.literal("medical_services"),
        z.literal("membership_organizations"),
        z.literal("mens_and_boys_clothing_and_accessories_stores"),
        z.literal("mens_womens_clothing_stores"),
        z.literal("metal_service_centers"),
        z.literal("miscellaneous"),
        z.literal("miscellaneous_apparel_and_accessory_shops"),
        z.literal("miscellaneous_auto_dealers"),
        z.literal("miscellaneous_business_services"),
        z.literal("miscellaneous_food_stores"),
        z.literal("miscellaneous_general_merchandise"),
        z.literal("miscellaneous_general_services"),
        z.literal("miscellaneous_home_furnishing_specialty_stores"),
        z.literal("miscellaneous_publishing_and_printing"),
        z.literal("miscellaneous_recreation_services"),
        z.literal("miscellaneous_repair_shops"),
        z.literal("miscellaneous_specialty_retail"),
        z.literal("mobile_home_dealers"),
        z.literal("motion_picture_theaters"),
        z.literal("motor_freight_carriers_and_trucking"),
        z.literal("motor_homes_dealers"),
        z.literal("motor_vehicle_supplies_and_new_parts"),
        z.literal("motorcycle_shops_and_dealers"),
        z.literal("motorcycle_shops_dealers"),
        z.literal("music_stores_musical_instruments_pianos_and_sheet_music"),
        z.literal("news_dealers_and_newsstands"),
        z.literal("non_fi_money_orders"),
        z.literal("non_fi_stored_value_card_purchase_load"),
        z.literal("nondurable_goods"),
        z.literal("nurseries_lawn_and_garden_supply_stores"),
        z.literal("nursing_personal_care"),
        z.literal("office_and_commercial_furniture"),
        z.literal("opticians_eyeglasses"),
        z.literal("optometrists_ophthalmologist"),
        z.literal("orthopedic_goods_prosthetic_devices"),
        z.literal("osteopaths"),
        z.literal("package_stores_beer_wine_and_liquor"),
        z.literal("paints_varnishes_and_supplies"),
        z.literal("parking_lots_garages"),
        z.literal("passenger_railways"),
        z.literal("pawn_shops"),
        z.literal("pet_shops_pet_food_and_supplies"),
        z.literal("petroleum_and_petroleum_products"),
        z.literal("photo_developing"),
        z.literal("photographic_photocopy_microfilm_equipment_and_supplies"),
        z.literal("photographic_studios"),
        z.literal("picture_video_production"),
        z.literal("piece_goods_notions_and_other_dry_goods"),
        z.literal("plumbing_heating_equipment_and_supplies"),
        z.literal("political_organizations"),
        z.literal("postal_services_government_only"),
        z.literal("precious_stones_and_metals_watches_and_jewelry"),
        z.literal("professional_services"),
        z.literal("public_warehousing_and_storage"),
        z.literal("quick_copy_repro_and_blueprint"),
        z.literal("railroads"),
        z.literal("real_estate_agents_and_managers_rentals"),
        z.literal("record_stores"),
        z.literal("recreational_vehicle_rentals"),
        z.literal("religious_goods_stores"),
        z.literal("religious_organizations"),
        z.literal("roofing_siding_sheet_metal"),
        z.literal("secretarial_support_services"),
        z.literal("security_brokers_dealers"),
        z.literal("service_stations"),
        z.literal("sewing_needlework_fabric_and_piece_goods_stores"),
        z.literal("shoe_repair_hat_cleaning"),
        z.literal("shoe_stores"),
        z.literal("small_appliance_repair"),
        z.literal("snowmobile_dealers"),
        z.literal("special_trade_services"),
        z.literal("specialty_cleaning"),
        z.literal("sporting_goods_stores"),
        z.literal("sporting_recreation_camps"),
        z.literal("sports_and_riding_apparel_stores"),
        z.literal("sports_clubs_fields"),
        z.literal("stamp_and_coin_stores"),
        z.literal("stationary_office_supplies_printing_and_writing_paper"),
        z.literal("stationery_stores_office_and_school_supply_stores"),
        z.literal("swimming_pools_sales"),
        z.literal("t_ui_travel_germany"),
        z.literal("tailors_alterations"),
        z.literal("tax_payments_government_agencies"),
        z.literal("tax_preparation_services"),
        z.literal("taxicabs_limousines"),
        z.literal("telecommunication_equipment_and_telephone_sales"),
        z.literal("telecommunication_services"),
        z.literal("telegraph_services"),
        z.literal("tent_and_awning_shops"),
        z.literal("testing_laboratories"),
        z.literal("theatrical_ticket_agencies"),
        z.literal("timeshares"),
        z.literal("tire_retreading_and_repair"),
        z.literal("tolls_bridge_fees"),
        z.literal("tourist_attractions_and_exhibits"),
        z.literal("towing_services"),
        z.literal("trailer_parks_campgrounds"),
        z.literal("transportation_services"),
        z.literal("travel_agencies_tour_operators"),
        z.literal("truck_stop_iteration"),
        z.literal("truck_utility_trailer_rentals"),
        z.literal("typesetting_plate_making_and_related_services"),
        z.literal("typewriter_stores"),
        z.literal("u_s_federal_government_agencies_or_departments"),
        z.literal("uniforms_commercial_clothing"),
        z.literal("used_merchandise_and_secondhand_stores"),
        z.literal("utilities"),
        z.literal("variety_stores"),
        z.literal("veterinary_services"),
        z.literal("video_amusement_game_supplies"),
        z.literal("video_game_arcades"),
        z.literal("video_tape_rental_stores"),
        z.literal("vocational_trade_schools"),
        z.literal("watch_jewelry_repair"),
        z.literal("welding_repair"),
        z.literal("wholesale_clubs"),
        z.literal("wig_and_toupee_stores"),
        z.literal("wires_money_orders"),
        z.literal("womens_accessory_and_specialty_shops"),
        z.literal("womens_ready_to_wear_stores"),
        z.literal("wrecking_and_salvage_yards"),
      ])
    )
    .optional()
    .nullable(),
  interval: z.union([
    z.literal("all_time"),
    z.literal("daily"),
    z.literal("monthly"),
    z.literal("per_authorization"),
    z.literal("weekly"),
    z.literal("yearly"),
  ]),
});

export const issuingTransactionAmountDetailsSchema = z.object({
  atm_fee: z.number().optional().nullable(),
});

export const issuingTransactionFlightDataLegSchema = z.object({
  arrival_airport_code: z.string().optional().nullable(),
  carrier: z.string().optional().nullable(),
  departure_airport_code: z.string().optional().nullable(),
  flight_number: z.string().optional().nullable(),
  service_class: z.string().optional().nullable(),
  stopover_allowed: z.boolean().optional().nullable(),
});

export const issuingTransactionFuelDataSchema = z.object({
  type: z.string(),
  unit: z.string(),
  unit_cost_decimal: z.string(),
  volume_decimal: z.string().optional().nullable(),
});

export const issuingTransactionLodgingDataSchema = z.object({
  check_in_at: z.number().optional().nullable(),
  nights: z.number().optional().nullable(),
});

export const issuingTransactionReceiptDataSchema = z.object({
  description: z.string().optional().nullable(),
  quantity: z.number().optional().nullable(),
  total: z.number().optional().nullable(),
  unit_cost: z.number().optional().nullable(),
});

export const legalEntityDobSchema = z.object({
  day: z.number().optional().nullable(),
  month: z.number().optional().nullable(),
  year: z.number().optional().nullable(),
});

export const legalEntityJapanAddressSchema = z.object({
  city: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  line1: z.string().optional().nullable(),
  line2: z.string().optional().nullable(),
  postal_code: z.string().optional().nullable(),
  state: z.string().optional().nullable(),
  town: z.string().optional().nullable(),
});

export const loginLinkSchema = z.object({
  created: z.number(),
  object: z.literal("login_link"),
  url: z.string(),
});

export const mandateAcssDebitSchema = z.object({
  interval_description: z.string().optional().nullable(),
  payment_schedule: z.union([
    z.literal("combined"),
    z.literal("interval"),
    z.literal("sporadic"),
  ]),
  transaction_type: z.union([z.literal("business"), z.literal("personal")]),
});

export const mandateAuBecsDebitSchema = z.object({
  url: z.string(),
});

export const mandateBacsDebitSchema = z.object({
  network_status: z.union([
    z.literal("accepted"),
    z.literal("pending"),
    z.literal("refused"),
    z.literal("revoked"),
  ]),
  reference: z.string(),
  url: z.string(),
});

export const mandateMultiUseSchema = z.object({});

export const mandateSepaDebitSchema = z.object({
  reference: z.string(),
  url: z.string(),
});

export const mandateSingleUseSchema = z.object({
  amount: z.number(),
  currency: z.string(),
});

export const networksSchema = z.object({
  available: z.array(z.string()),
  preferred: z.string().optional().nullable(),
});

export const notificationEventDataSchema = z.object({
  object: z.record(z.any()),
  previous_attributes: z.record(z.any()).optional(),
});

export const notificationEventRequestSchema = z.object({
  id: z.string().optional().nullable(),
  idempotency_key: z.string().optional().nullable(),
});

export const offlineAcceptanceSchema = z.object({});

export const onlineAcceptanceSchema = z.object({
  ip_address: z.string().optional().nullable(),
  user_agent: z.string().optional().nullable(),
});

export const packageDimensionsSchema = z.object({
  height: z.number(),
  length: z.number(),
  weight: z.number(),
  width: z.number(),
});

export const paymentFlowsPrivatePaymentMethodsAlipaySchema = z.object({});

export const paymentFlowsPrivatePaymentMethodsAlipayDetailsSchema = z.object({
  fingerprint: z.string().optional().nullable(),
  transaction_id: z.string().optional().nullable(),
});

export const paymentIntentNextActionAlipayHandleRedirectSchema = z.object({
  native_data: z.string().optional().nullable(),
  native_url: z.string().optional().nullable(),
  return_url: z.string().optional().nullable(),
  url: z.string().optional().nullable(),
});

export const paymentIntentNextActionBoletoSchema = z.object({
  expires_at: z.number().optional().nullable(),
  hosted_voucher_url: z.string().optional().nullable(),
  number: z.string().optional().nullable(),
  pdf: z.string().optional().nullable(),
});

export const paymentIntentNextActionDisplayOxxoDetailsSchema = z.object({
  expires_after: z.number().optional().nullable(),
  hosted_voucher_url: z.string().optional().nullable(),
  number: z.string().optional().nullable(),
});

export const paymentIntentNextActionRedirectToUrlSchema = z.object({
  return_url: z.string().optional().nullable(),
  url: z.string().optional().nullable(),
});

export const paymentIntentNextActionVerifyWithMicrodepositsSchema = z.object({
  arrival_date: z.number(),
  hosted_verification_url: z.string(),
});

export const paymentIntentNextActionWechatPayDisplayQrCodeSchema = z.object({
  data: z.string(),
  image_data_url: z.string(),
});

export const paymentIntentNextActionWechatPayRedirectToAndroidAppSchema = z.object(
  {
    app_id: z.string(),
    nonce_str: z.string(),
    package: z.string(),
    partner_id: z.string(),
    prepay_id: z.string(),
    sign: z.string(),
    timestamp: z.string(),
  }
);

export const paymentIntentNextActionWechatPayRedirectToIosAppSchema = z.object({
  native_url: z.string(),
});

export const paymentIntentPaymentMethodOptionsMandateOptionsAcssDebitSchema = z.object(
  {
    custom_mandate_url: z.string().optional(),
    interval_description: z.string().optional().nullable(),
    payment_schedule: z
      .union([
        z.literal("combined"),
        z.literal("interval"),
        z.literal("sporadic"),
      ])
      .optional(),
    transaction_type: z
      .union([z.literal("business"), z.literal("personal")])
      .optional(),
  }
);

export const paymentIntentPaymentMethodOptionsMandateOptionsSepaDebitSchema = z.object(
  {}
);

export const paymentIntentPaymentMethodOptionsSepaDebitSchema = z.object({
  mandate_options: paymentIntentPaymentMethodOptionsMandateOptionsSepaDebitSchema.optional(),
});

export const paymentMethodAcssDebitSchema = z.object({
  bank_name: z.string().optional().nullable(),
  fingerprint: z.string().optional().nullable(),
  institution_number: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  transit_number: z.string().optional().nullable(),
});

export const paymentMethodAfterpayClearpaySchema = z.object({});

export const paymentMethodAuBecsDebitSchema = z.object({
  bsb_number: z.string().optional().nullable(),
  fingerprint: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
});

export const paymentMethodBacsDebitSchema = z.object({
  fingerprint: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  sort_code: z.string().optional().nullable(),
});

export const paymentMethodBancontactSchema = z.object({});

export const paymentMethodBoletoSchema = z.object({
  tax_id: z.string(),
});

export const paymentMethodCardChecksSchema = z.object({
  address_line1_check: z.string().optional().nullable(),
  address_postal_code_check: z.string().optional().nullable(),
  cvc_check: z.string().optional().nullable(),
});

export const paymentMethodCardPresentSchema = z.object({});

export const paymentMethodCardWalletAmexExpressCheckoutSchema = z.object({});

export const paymentMethodCardWalletApplePaySchema = z.object({});

export const paymentMethodCardWalletGooglePaySchema = z.object({});

export const paymentMethodCardWalletMasterpassSchema = z.object({
  billing_address: addressSchema.optional().nullable(),
  email: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  shipping_address: addressSchema.optional().nullable(),
});

export const paymentMethodCardWalletSamsungPaySchema = z.object({});

export const paymentMethodCardWalletVisaCheckoutSchema = z.object({
  billing_address: addressSchema.optional().nullable(),
  email: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  shipping_address: addressSchema.optional().nullable(),
});

export const paymentMethodDetailsAchCreditTransferSchema = z.object({
  account_number: z.string().optional().nullable(),
  bank_name: z.string().optional().nullable(),
  routing_number: z.string().optional().nullable(),
  swift_code: z.string().optional().nullable(),
});

export const paymentMethodDetailsAchDebitSchema = z.object({
  account_holder_type: z
    .union([z.literal("company"), z.literal("individual")])
    .optional(),
  bank_name: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  fingerprint: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  routing_number: z.string().optional().nullable(),
});

export const paymentMethodDetailsAcssDebitSchema = z.object({
  bank_name: z.string().optional().nullable(),
  fingerprint: z.string().optional().nullable(),
  institution_number: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  mandate: z.string().optional(),
  transit_number: z.string().optional().nullable(),
});

export const paymentMethodDetailsAfterpayClearpaySchema = z.object({
  reference: z.string().optional().nullable(),
});

export const paymentMethodDetailsAuBecsDebitSchema = z.object({
  bsb_number: z.string().optional().nullable(),
  fingerprint: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  mandate: z.string().optional(),
});

export const paymentMethodDetailsBacsDebitSchema = z.object({
  fingerprint: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  mandate: z.string().optional().nullable(),
  sort_code: z.string().optional().nullable(),
});

export const paymentMethodDetailsBoletoSchema = z.object({
  tax_id: z.string(),
});

export const paymentMethodDetailsCardChecksSchema = z.object({
  address_line1_check: z.string().optional().nullable(),
  address_postal_code_check: z.string().optional().nullable(),
  cvc_check: z.string().optional().nullable(),
});

export const paymentMethodDetailsCardInstallmentsPlanSchema = z.object({
  count: z.number().optional().nullable(),
  interval: z.literal("month").optional(),
  type: z.literal("fixed_count"),
});

export const paymentMethodDetailsCardPresentReceiptSchema = z.object({
  account_type: z
    .union([
      z.literal("checking"),
      z.literal("credit"),
      z.literal("prepaid"),
      z.literal("unknown"),
    ])
    .optional(),
  application_cryptogram: z.string().optional().nullable(),
  application_preferred_name: z.string().optional().nullable(),
  authorization_code: z.string().optional().nullable(),
  authorization_response_code: z.string().optional().nullable(),
  cardholder_verification_method: z.string().optional().nullable(),
  dedicated_file_name: z.string().optional().nullable(),
  terminal_verification_results: z.string().optional().nullable(),
  transaction_status_information: z.string().optional().nullable(),
});

export const paymentMethodDetailsCardWalletAmexExpressCheckoutSchema = z.object(
  {}
);

export const paymentMethodDetailsCardWalletApplePaySchema = z.object({});

export const paymentMethodDetailsCardWalletGooglePaySchema = z.object({});

export const paymentMethodDetailsCardWalletMasterpassSchema = z.object({
  billing_address: addressSchema.optional().nullable(),
  email: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  shipping_address: addressSchema.optional().nullable(),
});

export const paymentMethodDetailsCardWalletSamsungPaySchema = z.object({});

export const paymentMethodDetailsCardWalletVisaCheckoutSchema = z.object({
  billing_address: addressSchema.optional().nullable(),
  email: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  shipping_address: addressSchema.optional().nullable(),
});

export const paymentMethodDetailsEpsSchema = z.object({
  bank: z
    .union([
      z.literal("arzte_und_apotheker_bank"),
      z.literal("austrian_anadi_bank_ag"),
      z.literal("bank_austria"),
      z.literal("bankhaus_carl_spangler"),
      z.literal("bankhaus_schelhammer_und_schattera_ag"),
      z.literal("bawag_psk_ag"),
      z.literal("bks_bank_ag"),
      z.literal("brull_kallmus_bank_ag"),
      z.literal("btv_vier_lander_bank"),
      z.literal("capital_bank_grawe_gruppe_ag"),
      z.literal("dolomitenbank"),
      z.literal("easybank_ag"),
      z.literal("erste_bank_und_sparkassen"),
      z.literal("hypo_alpeadriabank_international_ag"),
      z.literal("hypo_bank_burgenland_aktiengesellschaft"),
      z.literal("hypo_noe_lb_fur_niederosterreich_u_wien"),
      z.literal("hypo_oberosterreich_salzburg_steiermark"),
      z.literal("hypo_tirol_bank_ag"),
      z.literal("hypo_vorarlberg_bank_ag"),
      z.literal("marchfelder_bank"),
      z.literal("oberbank_ag"),
      z.literal("raiffeisen_bankengruppe_osterreich"),
      z.literal("schoellerbank_ag"),
      z.literal("sparda_bank_wien"),
      z.literal("volksbank_gruppe"),
      z.literal("volkskreditbank_ag"),
      z.literal("vr_bank_braunau"),
    ])
    .optional(),
  verified_name: z.string().optional().nullable(),
});

export const paymentMethodDetailsFpxSchema = z.object({
  bank: z.union([
    z.literal("affin_bank"),
    z.literal("alliance_bank"),
    z.literal("ambank"),
    z.literal("bank_islam"),
    z.literal("bank_muamalat"),
    z.literal("bank_rakyat"),
    z.literal("bsn"),
    z.literal("cimb"),
    z.literal("deutsche_bank"),
    z.literal("hong_leong_bank"),
    z.literal("hsbc"),
    z.literal("kfh"),
    z.literal("maybank2e"),
    z.literal("maybank2u"),
    z.literal("ocbc"),
    z.literal("pb_enterprise"),
    z.literal("public_bank"),
    z.literal("rhb"),
    z.literal("standard_chartered"),
    z.literal("uob"),
  ]),
  transaction_id: z.string().optional().nullable(),
});

export const paymentMethodDetailsGiropaySchema = z.object({
  bank_code: z.string().optional().nullable(),
  bank_name: z.string().optional().nullable(),
  bic: z.string().optional().nullable(),
  verified_name: z.string().optional().nullable(),
});

export const paymentMethodDetailsGrabpaySchema = z.object({
  transaction_id: z.string().optional().nullable(),
});

export const paymentMethodDetailsInteracPresentReceiptSchema = z.object({
  account_type: z
    .union([z.literal("checking"), z.literal("savings"), z.literal("unknown")])
    .optional(),
  application_cryptogram: z.string().optional().nullable(),
  application_preferred_name: z.string().optional().nullable(),
  authorization_code: z.string().optional().nullable(),
  authorization_response_code: z.string().optional().nullable(),
  cardholder_verification_method: z.string().optional().nullable(),
  dedicated_file_name: z.string().optional().nullable(),
  terminal_verification_results: z.string().optional().nullable(),
  transaction_status_information: z.string().optional().nullable(),
});

export const paymentMethodDetailsKlarnaSchema = z.object({});

export const paymentMethodDetailsMultibancoSchema = z.object({
  entity: z.string().optional().nullable(),
  reference: z.string().optional().nullable(),
});

export const paymentMethodDetailsOxxoSchema = z.object({
  number: z.string().optional().nullable(),
});

export const paymentMethodDetailsP24Schema = z.object({
  bank: z
    .union([
      z.literal("alior_bank"),
      z.literal("bank_millennium"),
      z.literal("bank_nowy_bfg_sa"),
      z.literal("bank_pekao_sa"),
      z.literal("banki_spbdzielcze"),
      z.literal("blik"),
      z.literal("bnp_paribas"),
      z.literal("boz"),
      z.literal("citi_handlowy"),
      z.literal("credit_agricole"),
      z.literal("envelobank"),
      z.literal("etransfer_pocztowy24"),
      z.literal("getin_bank"),
      z.literal("ideabank"),
      z.literal("ing"),
      z.literal("inteligo"),
      z.literal("mbank_mtransfer"),
      z.literal("nest_przelew"),
      z.literal("noble_pay"),
      z.literal("pbac_z_ipko"),
      z.literal("plus_bank"),
      z.literal("santander_przelew24"),
      z.literal("tmobile_usbugi_bankowe"),
      z.literal("toyota_bank"),
      z.literal("volkswagen_bank"),
    ])
    .optional(),
  reference: z.string().optional().nullable(),
  verified_name: z.string().optional().nullable(),
});

export const paymentMethodDetailsSepaDebitSchema = z.object({
  bank_code: z.string().optional().nullable(),
  branch_code: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  fingerprint: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  mandate: z.string().optional().nullable(),
});

export const paymentMethodDetailsStripeAccountSchema = z.object({});

export const paymentMethodDetailsWechatSchema = z.object({});

export const paymentMethodDetailsWechatPaySchema = z.object({
  fingerprint: z.string().optional().nullable(),
  transaction_id: z.string().optional().nullable(),
});

export const paymentMethodEpsSchema = z.object({
  bank: z
    .union([
      z.literal("arzte_und_apotheker_bank"),
      z.literal("austrian_anadi_bank_ag"),
      z.literal("bank_austria"),
      z.literal("bankhaus_carl_spangler"),
      z.literal("bankhaus_schelhammer_und_schattera_ag"),
      z.literal("bawag_psk_ag"),
      z.literal("bks_bank_ag"),
      z.literal("brull_kallmus_bank_ag"),
      z.literal("btv_vier_lander_bank"),
      z.literal("capital_bank_grawe_gruppe_ag"),
      z.literal("dolomitenbank"),
      z.literal("easybank_ag"),
      z.literal("erste_bank_und_sparkassen"),
      z.literal("hypo_alpeadriabank_international_ag"),
      z.literal("hypo_bank_burgenland_aktiengesellschaft"),
      z.literal("hypo_noe_lb_fur_niederosterreich_u_wien"),
      z.literal("hypo_oberosterreich_salzburg_steiermark"),
      z.literal("hypo_tirol_bank_ag"),
      z.literal("hypo_vorarlberg_bank_ag"),
      z.literal("marchfelder_bank"),
      z.literal("oberbank_ag"),
      z.literal("raiffeisen_bankengruppe_osterreich"),
      z.literal("schoellerbank_ag"),
      z.literal("sparda_bank_wien"),
      z.literal("volksbank_gruppe"),
      z.literal("volkskreditbank_ag"),
      z.literal("vr_bank_braunau"),
    ])
    .optional(),
});

export const paymentMethodFpxSchema = z.object({
  bank: z.union([
    z.literal("affin_bank"),
    z.literal("alliance_bank"),
    z.literal("ambank"),
    z.literal("bank_islam"),
    z.literal("bank_muamalat"),
    z.literal("bank_rakyat"),
    z.literal("bsn"),
    z.literal("cimb"),
    z.literal("deutsche_bank"),
    z.literal("hong_leong_bank"),
    z.literal("hsbc"),
    z.literal("kfh"),
    z.literal("maybank2e"),
    z.literal("maybank2u"),
    z.literal("ocbc"),
    z.literal("pb_enterprise"),
    z.literal("public_bank"),
    z.literal("rhb"),
    z.literal("standard_chartered"),
    z.literal("uob"),
  ]),
});

export const paymentMethodGiropaySchema = z.object({});

export const paymentMethodGrabpaySchema = z.object({});

export const paymentMethodIdealSchema = z.object({
  bank: z
    .union([
      z.literal("abn_amro"),
      z.literal("asn_bank"),
      z.literal("bunq"),
      z.literal("handelsbanken"),
      z.literal("ing"),
      z.literal("knab"),
      z.literal("moneyou"),
      z.literal("rabobank"),
      z.literal("regiobank"),
      z.literal("revolut"),
      z.literal("sns_bank"),
      z.literal("triodos_bank"),
      z.literal("van_lanschot"),
    ])
    .optional(),
  bic: z
    .union([
      z.literal("ABNANL2A"),
      z.literal("ASNBNL21"),
      z.literal("BUNQNL2A"),
      z.literal("FVLBNL22"),
      z.literal("HANDNL2A"),
      z.literal("INGBNL2A"),
      z.literal("KNABNL2H"),
      z.literal("MOYONL21"),
      z.literal("RABONL2U"),
      z.literal("RBRBNL21"),
      z.literal("REVOLT21"),
      z.literal("SNSBNL2A"),
      z.literal("TRIONL2U"),
    ])
    .optional(),
});

export const paymentMethodInteracPresentSchema = z.object({});

export const paymentMethodOptionsAfterpayClearpaySchema = z.object({
  reference: z.string().optional().nullable(),
});

export const paymentMethodOptionsAlipaySchema = z.object({});

export const paymentMethodOptionsBancontactSchema = z.object({
  preferred_language: z.union([
    z.literal("de"),
    z.literal("en"),
    z.literal("fr"),
    z.literal("nl"),
  ]),
});

export const paymentMethodOptionsBoletoSchema = z.object({
  expires_after_days: z.number(),
});

export const paymentMethodOptionsCardInstallmentsSchema = z.object({
  available_plans: z
    .array(paymentMethodDetailsCardInstallmentsPlanSchema)
    .optional()
    .nullable(),
  enabled: z.boolean(),
  plan: paymentMethodDetailsCardInstallmentsPlanSchema.optional().nullable(),
});

export const paymentMethodOptionsCardPresentSchema = z.object({});

export const paymentMethodOptionsIdealSchema = z.object({});

export const paymentMethodOptionsOxxoSchema = z.object({
  expires_after_days: z.number(),
});

export const paymentMethodOptionsP24Schema = z.object({});

export const paymentMethodOptionsSofortSchema = z.object({
  preferred_language: z
    .union([
      z.literal("de"),
      z.literal("en"),
      z.literal("es"),
      z.literal("fr"),
      z.literal("it"),
      z.literal("nl"),
      z.literal("pl"),
    ])
    .optional(),
});

export const paymentMethodOptionsWechatPaySchema = z.object({
  app_id: z.string().optional().nullable(),
  client: z
    .union([z.literal("android"), z.literal("ios"), z.literal("web")])
    .optional(),
});

export const paymentMethodOxxoSchema = z.object({});

export const paymentMethodP24Schema = z.object({
  bank: z
    .union([
      z.literal("alior_bank"),
      z.literal("bank_millennium"),
      z.literal("bank_nowy_bfg_sa"),
      z.literal("bank_pekao_sa"),
      z.literal("banki_spbdzielcze"),
      z.literal("blik"),
      z.literal("bnp_paribas"),
      z.literal("boz"),
      z.literal("citi_handlowy"),
      z.literal("credit_agricole"),
      z.literal("envelobank"),
      z.literal("etransfer_pocztowy24"),
      z.literal("getin_bank"),
      z.literal("ideabank"),
      z.literal("ing"),
      z.literal("inteligo"),
      z.literal("mbank_mtransfer"),
      z.literal("nest_przelew"),
      z.literal("noble_pay"),
      z.literal("pbac_z_ipko"),
      z.literal("plus_bank"),
      z.literal("santander_przelew24"),
      z.literal("tmobile_usbugi_bankowe"),
      z.literal("toyota_bank"),
      z.literal("volkswagen_bank"),
    ])
    .optional(),
});

export const paymentMethodSofortSchema = z.object({
  country: z.string().optional().nullable(),
});

export const paymentMethodWechatPaySchema = z.object({});

export const paymentPagesCheckoutSessionAutomaticTaxSchema = z.object({
  enabled: z.boolean(),
  status: z
    .union([
      z.literal("complete"),
      z.literal("failed"),
      z.literal("requires_location_inputs"),
    ])
    .optional(),
});

export const paymentPagesCheckoutSessionTaxIdSchema = z.object({
  type: z.union([
    z.literal("ae_trn"),
    z.literal("au_abn"),
    z.literal("au_arn"),
    z.literal("br_cnpj"),
    z.literal("br_cpf"),
    z.literal("ca_bn"),
    z.literal("ca_gst_hst"),
    z.literal("ca_pst_bc"),
    z.literal("ca_pst_mb"),
    z.literal("ca_pst_sk"),
    z.literal("ca_qst"),
    z.literal("ch_vat"),
    z.literal("cl_tin"),
    z.literal("es_cif"),
    z.literal("eu_vat"),
    z.literal("gb_vat"),
    z.literal("hk_br"),
    z.literal("id_npwp"),
    z.literal("il_vat"),
    z.literal("in_gst"),
    z.literal("jp_cn"),
    z.literal("jp_rn"),
    z.literal("kr_brn"),
    z.literal("li_uid"),
    z.literal("mx_rfc"),
    z.literal("my_frp"),
    z.literal("my_itn"),
    z.literal("my_sst"),
    z.literal("no_vat"),
    z.literal("nz_gst"),
    z.literal("ru_inn"),
    z.literal("ru_kpp"),
    z.literal("sa_vat"),
    z.literal("sg_gst"),
    z.literal("sg_uen"),
    z.literal("th_vat"),
    z.literal("tw_vat"),
    z.literal("unknown"),
    z.literal("us_ein"),
    z.literal("za_vat"),
  ]),
  value: z.string().optional().nullable(),
});

export const paymentPagesCheckoutSessionTaxIdCollectionSchema = z.object({
  enabled: z.boolean(),
});

export const paymentPagesPaymentPageResourcesShippingAddressCollectionSchema = z.object(
  {
    allowed_countries: z.array(
      z.union([
        z.literal("AC"),
        z.literal("AD"),
        z.literal("AE"),
        z.literal("AF"),
        z.literal("AG"),
        z.literal("AI"),
        z.literal("AL"),
        z.literal("AM"),
        z.literal("AO"),
        z.literal("AQ"),
        z.literal("AR"),
        z.literal("AT"),
        z.literal("AU"),
        z.literal("AW"),
        z.literal("AX"),
        z.literal("AZ"),
        z.literal("BA"),
        z.literal("BB"),
        z.literal("BD"),
        z.literal("BE"),
        z.literal("BF"),
        z.literal("BG"),
        z.literal("BH"),
        z.literal("BI"),
        z.literal("BJ"),
        z.literal("BL"),
        z.literal("BM"),
        z.literal("BN"),
        z.literal("BO"),
        z.literal("BQ"),
        z.literal("BR"),
        z.literal("BS"),
        z.literal("BT"),
        z.literal("BV"),
        z.literal("BW"),
        z.literal("BY"),
        z.literal("BZ"),
        z.literal("CA"),
        z.literal("CD"),
        z.literal("CF"),
        z.literal("CG"),
        z.literal("CH"),
        z.literal("CI"),
        z.literal("CK"),
        z.literal("CL"),
        z.literal("CM"),
        z.literal("CN"),
        z.literal("CO"),
        z.literal("CR"),
        z.literal("CV"),
        z.literal("CW"),
        z.literal("CY"),
        z.literal("CZ"),
        z.literal("DE"),
        z.literal("DJ"),
        z.literal("DK"),
        z.literal("DM"),
        z.literal("DO"),
        z.literal("DZ"),
        z.literal("EC"),
        z.literal("EE"),
        z.literal("EG"),
        z.literal("EH"),
        z.literal("ER"),
        z.literal("ES"),
        z.literal("ET"),
        z.literal("FI"),
        z.literal("FJ"),
        z.literal("FK"),
        z.literal("FO"),
        z.literal("FR"),
        z.literal("GA"),
        z.literal("GB"),
        z.literal("GD"),
        z.literal("GE"),
        z.literal("GF"),
        z.literal("GG"),
        z.literal("GH"),
        z.literal("GI"),
        z.literal("GL"),
        z.literal("GM"),
        z.literal("GN"),
        z.literal("GP"),
        z.literal("GQ"),
        z.literal("GR"),
        z.literal("GS"),
        z.literal("GT"),
        z.literal("GU"),
        z.literal("GW"),
        z.literal("GY"),
        z.literal("HK"),
        z.literal("HN"),
        z.literal("HR"),
        z.literal("HT"),
        z.literal("HU"),
        z.literal("ID"),
        z.literal("IE"),
        z.literal("IL"),
        z.literal("IM"),
        z.literal("IN"),
        z.literal("IO"),
        z.literal("IQ"),
        z.literal("IS"),
        z.literal("IT"),
        z.literal("JE"),
        z.literal("JM"),
        z.literal("JO"),
        z.literal("JP"),
        z.literal("KE"),
        z.literal("KG"),
        z.literal("KH"),
        z.literal("KI"),
        z.literal("KM"),
        z.literal("KN"),
        z.literal("KR"),
        z.literal("KW"),
        z.literal("KY"),
        z.literal("KZ"),
        z.literal("LA"),
        z.literal("LB"),
        z.literal("LC"),
        z.literal("LI"),
        z.literal("LK"),
        z.literal("LR"),
        z.literal("LS"),
        z.literal("LT"),
        z.literal("LU"),
        z.literal("LV"),
        z.literal("LY"),
        z.literal("MA"),
        z.literal("MC"),
        z.literal("MD"),
        z.literal("ME"),
        z.literal("MF"),
        z.literal("MG"),
        z.literal("MK"),
        z.literal("ML"),
        z.literal("MM"),
        z.literal("MN"),
        z.literal("MO"),
        z.literal("MQ"),
        z.literal("MR"),
        z.literal("MS"),
        z.literal("MT"),
        z.literal("MU"),
        z.literal("MV"),
        z.literal("MW"),
        z.literal("MX"),
        z.literal("MY"),
        z.literal("MZ"),
        z.literal("NA"),
        z.literal("NC"),
        z.literal("NE"),
        z.literal("NG"),
        z.literal("NI"),
        z.literal("NL"),
        z.literal("NO"),
        z.literal("NP"),
        z.literal("NR"),
        z.literal("NU"),
        z.literal("NZ"),
        z.literal("OM"),
        z.literal("PA"),
        z.literal("PE"),
        z.literal("PF"),
        z.literal("PG"),
        z.literal("PH"),
        z.literal("PK"),
        z.literal("PL"),
        z.literal("PM"),
        z.literal("PN"),
        z.literal("PR"),
        z.literal("PS"),
        z.literal("PT"),
        z.literal("PY"),
        z.literal("QA"),
        z.literal("RE"),
        z.literal("RO"),
        z.literal("RS"),
        z.literal("RU"),
        z.literal("RW"),
        z.literal("SA"),
        z.literal("SB"),
        z.literal("SC"),
        z.literal("SE"),
        z.literal("SG"),
        z.literal("SH"),
        z.literal("SI"),
        z.literal("SJ"),
        z.literal("SK"),
        z.literal("SL"),
        z.literal("SM"),
        z.literal("SN"),
        z.literal("SO"),
        z.literal("SR"),
        z.literal("SS"),
        z.literal("ST"),
        z.literal("SV"),
        z.literal("SX"),
        z.literal("SZ"),
        z.literal("TA"),
        z.literal("TC"),
        z.literal("TD"),
        z.literal("TF"),
        z.literal("TG"),
        z.literal("TH"),
        z.literal("TJ"),
        z.literal("TK"),
        z.literal("TL"),
        z.literal("TM"),
        z.literal("TN"),
        z.literal("TO"),
        z.literal("TR"),
        z.literal("TT"),
        z.literal("TV"),
        z.literal("TW"),
        z.literal("TZ"),
        z.literal("UA"),
        z.literal("UG"),
        z.literal("US"),
        z.literal("UY"),
        z.literal("UZ"),
        z.literal("VA"),
        z.literal("VC"),
        z.literal("VE"),
        z.literal("VG"),
        z.literal("VN"),
        z.literal("VU"),
        z.literal("WF"),
        z.literal("WS"),
        z.literal("XK"),
        z.literal("YE"),
        z.literal("YT"),
        z.literal("ZA"),
        z.literal("ZM"),
        z.literal("ZW"),
        z.literal("ZZ"),
      ])
    ),
  }
);

export const periodSchema = z.object({
  end: z.number().optional().nullable(),
  start: z.number().optional().nullable(),
});

export const personRelationshipSchema = z.object({
  director: z.boolean().optional().nullable(),
  executive: z.boolean().optional().nullable(),
  owner: z.boolean().optional().nullable(),
  percent_ownership: z.number().optional().nullable(),
  representative: z.boolean().optional().nullable(),
  title: z.string().optional().nullable(),
});

export const personRequirementsSchema = z.object({
  currently_due: z.array(z.string()),
  errors: z.array(accountRequirementsErrorSchema),
  eventually_due: z.array(z.string()),
  past_due: z.array(z.string()),
  pending_verification: z.array(z.string()),
});

export const planTierSchema = z.object({
  flat_amount: z.number().optional().nullable(),
  flat_amount_decimal: z.string().optional().nullable(),
  unit_amount: z.number().optional().nullable(),
  unit_amount_decimal: z.string().optional().nullable(),
  up_to: z.number().optional().nullable(),
});

export const platformTaxFeeSchema = z.object({
  account: z.string(),
  id: z.string(),
  object: z.literal("platform_tax_fee"),
  source_transaction: z.string(),
  type: z.string(),
});

export const portalBusinessProfileSchema = z.object({
  headline: z.string().optional().nullable(),
  privacy_policy_url: z.string(),
  terms_of_service_url: z.string(),
});

export const portalCustomerUpdateSchema = z.object({
  allowed_updates: z.array(
    z.union([
      z.literal("address"),
      z.literal("email"),
      z.literal("phone"),
      z.literal("shipping"),
      z.literal("tax_id"),
    ])
  ),
  enabled: z.boolean(),
});

export const portalInvoiceListSchema = z.object({
  enabled: z.boolean(),
});

export const portalPaymentMethodUpdateSchema = z.object({
  enabled: z.boolean(),
});

export const portalSubscriptionCancelSchema = z.object({
  enabled: z.boolean(),
  mode: z.union([z.literal("at_period_end"), z.literal("immediately")]),
  proration_behavior: z.union([
    z.literal("always_invoice"),
    z.literal("create_prorations"),
    z.literal("none"),
  ]),
});

export const portalSubscriptionPauseSchema = z.object({
  enabled: z.boolean(),
});

export const portalSubscriptionUpdateProductSchema = z.object({
  prices: z.array(z.string()),
  product: z.string(),
});

export const priceTierSchema = z.object({
  flat_amount: z.number().optional().nullable(),
  flat_amount_decimal: z.string().optional().nullable(),
  unit_amount: z.number().optional().nullable(),
  unit_amount_decimal: z.string().optional().nullable(),
  up_to: z.number().optional().nullable(),
});

export const promotionCodesResourceRestrictionsSchema = z.object({
  first_time_transaction: z.boolean(),
  minimum_amount: z.number().optional().nullable(),
  minimum_amount_currency: z.string().optional().nullable(),
});

export const quotesResourceAutomaticTaxSchema = z.object({
  enabled: z.boolean(),
  status: z
    .union([
      z.literal("complete"),
      z.literal("failed"),
      z.literal("requires_location_inputs"),
    ])
    .optional(),
});

export const quotesResourceStatusTransitionsSchema = z.object({
  accepted_at: z.number().optional().nullable(),
  canceled_at: z.number().optional().nullable(),
  finalized_at: z.number().optional().nullable(),
});

export const quotesResourceSubscriptionDataSchema = z.object({
  effective_date: z.number().optional().nullable(),
  trial_period_days: z.number().optional().nullable(),
});

export const radarValueListItemSchema = z.object({
  created: z.number(),
  created_by: z.string(),
  id: z.string(),
  livemode: z.boolean(),
  object: z.literal("radar.value_list_item"),
  value: z.string(),
  value_list: z.string(),
});

export const radarReviewResourceLocationSchema = z.object({
  city: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  latitude: z.number().optional().nullable(),
  longitude: z.number().optional().nullable(),
  region: z.string().optional().nullable(),
});

export const radarReviewResourceSessionSchema = z.object({
  browser: z.string().optional().nullable(),
  device: z.string().optional().nullable(),
  platform: z.string().optional().nullable(),
  version: z.string().optional().nullable(),
});

export const recurringSchema = z.object({
  aggregate_usage: z
    .union([
      z.literal("last_during_period"),
      z.literal("last_ever"),
      z.literal("max"),
      z.literal("sum"),
    ])
    .optional(),
  interval: z.union([
    z.literal("day"),
    z.literal("month"),
    z.literal("week"),
    z.literal("year"),
  ]),
  interval_count: z.number(),
  usage_type: z.union([z.literal("licensed"), z.literal("metered")]),
});

export const reportingReportTypeSchema = z.object({
  data_available_end: z.number(),
  data_available_start: z.number(),
  default_columns: z.array(z.string()).optional().nullable(),
  id: z.string(),
  name: z.string(),
  object: z.literal("reporting.report_type"),
  updated: z.number(),
  version: z.number(),
});

export const reserveTransactionSchema = z.object({
  amount: z.number(),
  currency: z.string(),
  description: z.string().optional().nullable(),
  id: z.string(),
  object: z.literal("reserve_transaction"),
});

export const ruleSchema = z.object({
  action: z.string(),
  id: z.string(),
  predicate: z.string(),
});

export const schedulesPhaseAutomaticTaxSchema = z.object({
  enabled: z.boolean(),
});

export const setupAttemptPaymentMethodDetailsAcssDebitSchema = z.object({});

export const setupAttemptPaymentMethodDetailsAuBecsDebitSchema = z.object({});

export const setupAttemptPaymentMethodDetailsBacsDebitSchema = z.object({});

export const setupAttemptPaymentMethodDetailsSepaDebitSchema = z.object({});

export const setupIntentNextActionRedirectToUrlSchema = z.object({
  return_url: z.string().optional().nullable(),
  url: z.string().optional().nullable(),
});

export const setupIntentNextActionVerifyWithMicrodepositsSchema = z.object({
  arrival_date: z.number(),
  hosted_verification_url: z.string(),
});

export const setupIntentPaymentMethodOptionsCardSchema = z.object({
  request_three_d_secure: z
    .union([
      z.literal("any"),
      z.literal("automatic"),
      z.literal("challenge_only"),
    ])
    .optional(),
});

export const setupIntentPaymentMethodOptionsMandateOptionsAcssDebitSchema = z.object(
  {
    custom_mandate_url: z.string().optional(),
    interval_description: z.string().optional().nullable(),
    payment_schedule: z
      .union([
        z.literal("combined"),
        z.literal("interval"),
        z.literal("sporadic"),
      ])
      .optional(),
    transaction_type: z
      .union([z.literal("business"), z.literal("personal")])
      .optional(),
  }
);

export const setupIntentPaymentMethodOptionsMandateOptionsSepaDebitSchema = z.object(
  {}
);

export const setupIntentPaymentMethodOptionsSepaDebitSchema = z.object({
  mandate_options: setupIntentPaymentMethodOptionsMandateOptionsSepaDebitSchema.optional(),
});

export const shippingSchema = z.object({
  address: addressSchema.optional(),
  carrier: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  tracking_number: z.string().optional().nullable(),
});

export const shippingMethodSchema = z.object({
  amount: z.number(),
  currency: z.string(),
  delivery_estimate: deliveryEstimateSchema.optional().nullable(),
  description: z.string(),
  id: z.string(),
});

export const sigmaScheduledQueryRunErrorSchema = z.object({
  message: z.string(),
});

export const skuInventorySchema = z.object({
  quantity: z.number().optional().nullable(),
  type: z.string(),
  value: z.string().optional().nullable(),
});

export const sourceCodeVerificationFlowSchema = z.object({
  attempts_remaining: z.number(),
  status: z.string(),
});

export const sourceMandateNotificationAcssDebitDataSchema = z.object({
  statement_descriptor: z.string().optional(),
});

export const sourceMandateNotificationBacsDebitDataSchema = z.object({
  last4: z.string().optional(),
});

export const sourceMandateNotificationSepaDebitDataSchema = z.object({
  creditor_identifier: z.string().optional(),
  last4: z.string().optional(),
  mandate_reference: z.string().optional(),
});

export const sourceOrderItemSchema = z.object({
  amount: z.number().optional().nullable(),
  currency: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  parent: z.string().optional().nullable(),
  quantity: z.number().optional(),
  type: z.string().optional().nullable(),
});

export const sourceOwnerSchema = z.object({
  address: addressSchema.optional().nullable(),
  email: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  phone: z.string().optional().nullable(),
  verified_address: addressSchema.optional().nullable(),
  verified_email: z.string().optional().nullable(),
  verified_name: z.string().optional().nullable(),
  verified_phone: z.string().optional().nullable(),
});

export const sourceReceiverFlowSchema = z.object({
  address: z.string().optional().nullable(),
  amount_charged: z.number(),
  amount_received: z.number(),
  amount_returned: z.number(),
  refund_attributes_method: z.string(),
  refund_attributes_status: z.string(),
});

export const sourceRedirectFlowSchema = z.object({
  failure_reason: z.string().optional().nullable(),
  return_url: z.string(),
  status: z.string(),
  url: z.string(),
});

export const sourceTransactionAchCreditTransferDataSchema = z.object({
  customer_data: z.string().optional(),
  fingerprint: z.string().optional(),
  last4: z.string().optional(),
  routing_number: z.string().optional(),
});

export const sourceTransactionChfCreditTransferDataSchema = z.object({
  reference: z.string().optional(),
  sender_address_country: z.string().optional(),
  sender_address_line1: z.string().optional(),
  sender_iban: z.string().optional(),
  sender_name: z.string().optional(),
});

export const sourceTransactionGbpCreditTransferDataSchema = z.object({
  fingerprint: z.string().optional(),
  funding_method: z.string().optional(),
  last4: z.string().optional(),
  reference: z.string().optional(),
  sender_account_number: z.string().optional(),
  sender_name: z.string().optional(),
  sender_sort_code: z.string().optional(),
});

export const sourceTransactionPaperCheckDataSchema = z.object({
  available_at: z.string().optional(),
  invoices: z.string().optional(),
});

export const sourceTransactionSepaCreditTransferDataSchema = z.object({
  reference: z.string().optional(),
  sender_iban: z.string().optional(),
  sender_name: z.string().optional(),
});

export const sourceTypeAchCreditTransferSchema = z.object({
  account_number: z.string().optional().nullable(),
  bank_name: z.string().optional().nullable(),
  fingerprint: z.string().optional().nullable(),
  refund_account_holder_name: z.string().optional().nullable(),
  refund_account_holder_type: z.string().optional().nullable(),
  refund_routing_number: z.string().optional().nullable(),
  routing_number: z.string().optional().nullable(),
  swift_code: z.string().optional().nullable(),
});

export const sourceTypeAchDebitSchema = z.object({
  bank_name: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  fingerprint: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  routing_number: z.string().optional().nullable(),
  type: z.string().optional().nullable(),
});

export const sourceTypeAcssDebitSchema = z.object({
  bank_address_city: z.string().optional().nullable(),
  bank_address_line_1: z.string().optional().nullable(),
  bank_address_line_2: z.string().optional().nullable(),
  bank_address_postal_code: z.string().optional().nullable(),
  bank_name: z.string().optional().nullable(),
  category: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  fingerprint: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  routing_number: z.string().optional().nullable(),
});

export const sourceTypeAlipaySchema = z.object({
  data_string: z.string().optional().nullable(),
  native_url: z.string().optional().nullable(),
  statement_descriptor: z.string().optional().nullable(),
});

export const sourceTypeAuBecsDebitSchema = z.object({
  bsb_number: z.string().optional().nullable(),
  fingerprint: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
});

export const sourceTypeBancontactSchema = z.object({
  bank_code: z.string().optional().nullable(),
  bank_name: z.string().optional().nullable(),
  bic: z.string().optional().nullable(),
  iban_last4: z.string().optional().nullable(),
  preferred_language: z.string().optional().nullable(),
  statement_descriptor: z.string().optional().nullable(),
});

export const sourceTypeCardSchema = z.object({
  address_line1_check: z.string().optional().nullable(),
  address_zip_check: z.string().optional().nullable(),
  brand: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  cvc_check: z.string().optional().nullable(),
  dynamic_last4: z.string().optional().nullable(),
  exp_month: z.number().optional().nullable(),
  exp_year: z.number().optional().nullable(),
  fingerprint: z.string().optional(),
  funding: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  three_d_secure: z.string().optional(),
  tokenization_method: z.string().optional().nullable(),
});

export const sourceTypeCardPresentSchema = z.object({
  application_cryptogram: z.string().optional(),
  application_preferred_name: z.string().optional(),
  authorization_code: z.string().optional().nullable(),
  authorization_response_code: z.string().optional(),
  brand: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  cvm_type: z.string().optional(),
  data_type: z.string().optional().nullable(),
  dedicated_file_name: z.string().optional(),
  emv_auth_data: z.string().optional(),
  evidence_customer_signature: z.string().optional().nullable(),
  evidence_transaction_certificate: z.string().optional().nullable(),
  exp_month: z.number().optional().nullable(),
  exp_year: z.number().optional().nullable(),
  fingerprint: z.string().optional(),
  funding: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  pos_device_id: z.string().optional().nullable(),
  pos_entry_mode: z.string().optional(),
  read_method: z.string().optional().nullable(),
  reader: z.string().optional().nullable(),
  terminal_verification_results: z.string().optional(),
  transaction_status_information: z.string().optional(),
});

export const sourceTypeEpsSchema = z.object({
  reference: z.string().optional().nullable(),
  statement_descriptor: z.string().optional().nullable(),
});

export const sourceTypeGiropaySchema = z.object({
  bank_code: z.string().optional().nullable(),
  bank_name: z.string().optional().nullable(),
  bic: z.string().optional().nullable(),
  statement_descriptor: z.string().optional().nullable(),
});

export const sourceTypeIdealSchema = z.object({
  bank: z.string().optional().nullable(),
  bic: z.string().optional().nullable(),
  iban_last4: z.string().optional().nullable(),
  statement_descriptor: z.string().optional().nullable(),
});

export const sourceTypeKlarnaSchema = z.object({
  background_image_url: z.string().optional(),
  client_token: z.string().optional().nullable(),
  first_name: z.string().optional(),
  last_name: z.string().optional(),
  locale: z.string().optional(),
  logo_url: z.string().optional(),
  page_title: z.string().optional(),
  pay_later_asset_urls_descriptive: z.string().optional(),
  pay_later_asset_urls_standard: z.string().optional(),
  pay_later_name: z.string().optional(),
  pay_later_redirect_url: z.string().optional(),
  pay_now_asset_urls_descriptive: z.string().optional(),
  pay_now_asset_urls_standard: z.string().optional(),
  pay_now_name: z.string().optional(),
  pay_now_redirect_url: z.string().optional(),
  pay_over_time_asset_urls_descriptive: z.string().optional(),
  pay_over_time_asset_urls_standard: z.string().optional(),
  pay_over_time_name: z.string().optional(),
  pay_over_time_redirect_url: z.string().optional(),
  payment_method_categories: z.string().optional(),
  purchase_country: z.string().optional(),
  purchase_type: z.string().optional(),
  redirect_url: z.string().optional(),
  shipping_delay: z.number().optional(),
  shipping_first_name: z.string().optional(),
  shipping_last_name: z.string().optional(),
});

export const sourceTypeMultibancoSchema = z.object({
  entity: z.string().optional().nullable(),
  reference: z.string().optional().nullable(),
  refund_account_holder_address_city: z.string().optional().nullable(),
  refund_account_holder_address_country: z.string().optional().nullable(),
  refund_account_holder_address_line1: z.string().optional().nullable(),
  refund_account_holder_address_line2: z.string().optional().nullable(),
  refund_account_holder_address_postal_code: z.string().optional().nullable(),
  refund_account_holder_address_state: z.string().optional().nullable(),
  refund_account_holder_name: z.string().optional().nullable(),
  refund_iban: z.string().optional().nullable(),
});

export const sourceTypeP24Schema = z.object({
  reference: z.string().optional().nullable(),
});

export const sourceTypeSepaDebitSchema = z.object({
  bank_code: z.string().optional().nullable(),
  branch_code: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  fingerprint: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  mandate_reference: z.string().optional().nullable(),
  mandate_url: z.string().optional().nullable(),
});

export const sourceTypeSofortSchema = z.object({
  bank_code: z.string().optional().nullable(),
  bank_name: z.string().optional().nullable(),
  bic: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  iban_last4: z.string().optional().nullable(),
  preferred_language: z.string().optional().nullable(),
  statement_descriptor: z.string().optional().nullable(),
});

export const sourceTypeThreeDSecureSchema = z.object({
  address_line1_check: z.string().optional().nullable(),
  address_zip_check: z.string().optional().nullable(),
  authenticated: z.boolean().optional().nullable(),
  brand: z.string().optional().nullable(),
  card: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  customer: z.string().optional().nullable(),
  cvc_check: z.string().optional().nullable(),
  dynamic_last4: z.string().optional().nullable(),
  exp_month: z.number().optional().nullable(),
  exp_year: z.number().optional().nullable(),
  fingerprint: z.string().optional(),
  funding: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  three_d_secure: z.string().optional(),
  tokenization_method: z.string().optional().nullable(),
});

export const sourceTypeWechatSchema = z.object({
  prepay_id: z.string().optional(),
  qr_code_url: z.string().optional().nullable(),
  statement_descriptor: z.string().optional(),
});

export const statusTransitionsSchema = z.object({
  canceled: z.number().optional().nullable(),
  fulfiled: z.number().optional().nullable(),
  paid: z.number().optional().nullable(),
  returned: z.number().optional().nullable(),
});

export const subscriptionAutomaticTaxSchema = z.object({
  enabled: z.boolean(),
});

export const subscriptionBillingThresholdsSchema = z.object({
  amount_gte: z.number().optional().nullable(),
  reset_billing_cycle_anchor: z.boolean().optional().nullable(),
});

export const subscriptionItemBillingThresholdsSchema = z.object({
  usage_gte: z.number().optional().nullable(),
});

export const subscriptionPendingInvoiceItemIntervalSchema = z.object({
  interval: z.union([
    z.literal("day"),
    z.literal("month"),
    z.literal("week"),
    z.literal("year"),
  ]),
  interval_count: z.number(),
});

export const subscriptionScheduleCurrentPhaseSchema = z.object({
  end_date: z.number(),
  start_date: z.number(),
});

export const subscriptionSchedulesResourceDefaultSettingsAutomaticTaxSchema = z.object(
  {
    enabled: z.boolean(),
  }
);

export const subscriptionsResourcePauseCollectionSchema = z.object({
  behavior: z.union([
    z.literal("keep_as_draft"),
    z.literal("mark_uncollectible"),
    z.literal("void"),
  ]),
  resumes_at: z.number().optional().nullable(),
});

export const subscriptionsResourcePaymentMethodOptionsSchema = z.object({
  bancontact: invoicePaymentMethodOptionsBancontactSchema.optional().nullable(),
  card: invoicePaymentMethodOptionsCardSchema.optional().nullable(),
});

export const subscriptionsResourcePaymentSettingsSchema = z.object({
  payment_method_options: subscriptionsResourcePaymentMethodOptionsSchema
    .optional()
    .nullable(),
  payment_method_types: z
    .array(
      z.union([
        z.literal("ach_credit_transfer"),
        z.literal("ach_debit"),
        z.literal("au_becs_debit"),
        z.literal("bacs_debit"),
        z.literal("bancontact"),
        z.literal("boleto"),
        z.literal("card"),
        z.literal("fpx"),
        z.literal("giropay"),
        z.literal("ideal"),
        z.literal("sepa_debit"),
        z.literal("sofort"),
        z.literal("wechat_pay"),
      ])
    )
    .optional()
    .nullable(),
});

export const taxCodeSchema = z.object({
  description: z.string(),
  id: z.string(),
  name: z.string(),
  object: z.literal("tax_code"),
});

export const taxDeductedAtSourceSchema = z.object({
  id: z.string(),
  object: z.literal("tax_deducted_at_source"),
  period_end: z.number(),
  period_start: z.number(),
  tax_deduction_account_number: z.string(),
});

export const taxIdVerificationSchema = z.object({
  status: z.union([
    z.literal("pending"),
    z.literal("unavailable"),
    z.literal("unverified"),
    z.literal("verified"),
  ]),
  verified_address: z.string().optional().nullable(),
  verified_name: z.string().optional().nullable(),
});

export const taxRateSchema = z.object({
  active: z.boolean(),
  country: z.string().optional().nullable(),
  created: z.number(),
  description: z.string().optional().nullable(),
  display_name: z.string(),
  id: z.string(),
  inclusive: z.boolean(),
  jurisdiction: z.string().optional().nullable(),
  livemode: z.boolean(),
  metadata: z.record(z.string()).optional().nullable(),
  object: z.literal("tax_rate"),
  percentage: z.number(),
  state: z.string().optional().nullable(),
  tax_type: z
    .union([
      z.literal("gst"),
      z.literal("hst"),
      z.literal("pst"),
      z.literal("qst"),
      z.literal("sales_tax"),
      z.literal("vat"),
    ])
    .optional(),
});

export const terminalConnectionTokenSchema = z.object({
  location: z.string().optional(),
  object: z.literal("terminal.connection_token"),
  secret: z.string(),
});

export const terminalLocationSchema = z.object({
  address: addressSchema,
  display_name: z.string(),
  id: z.string(),
  livemode: z.boolean(),
  metadata: z.record(z.string()),
  object: z.literal("terminal.location"),
});

export const terminalReaderSchema = z.object({
  device_sw_version: z.string().optional().nullable(),
  device_type: z.union([
    z.literal("bbpos_chipper2x"),
    z.literal("verifone_P400"),
  ]),
  id: z.string(),
  ip_address: z.string().optional().nullable(),
  label: z.string(),
  livemode: z.boolean(),
  location: z.union([z.string(), terminalLocationSchema]).optional().nullable(),
  metadata: z.record(z.string()),
  object: z.literal("terminal.reader"),
  serial_number: z.string(),
  status: z.string().optional().nullable(),
});

export const threeDSecureDetailsSchema = z.object({
  authentication_flow: z
    .union([z.literal("challenge"), z.literal("frictionless")])
    .optional(),
  result: z
    .union([
      z.literal("attempt_acknowledged"),
      z.literal("authenticated"),
      z.literal("failed"),
      z.literal("not_supported"),
      z.literal("processing_error"),
    ])
    .optional(),
  result_reason: z
    .union([
      z.literal("abandoned"),
      z.literal("bypassed"),
      z.literal("canceled"),
      z.literal("card_not_enrolled"),
      z.literal("network_not_supported"),
      z.literal("protocol_error"),
      z.literal("rejected"),
    ])
    .optional(),
  version: z
    .union([z.literal("1.0.2"), z.literal("2.1.0"), z.literal("2.2.0")])
    .optional(),
});

export const threeDSecureUsageSchema = z.object({
  supported: z.boolean(),
});

export const transferScheduleSchema = z.object({
  delay_days: z.number(),
  interval: z.string(),
  monthly_anchor: z.number().optional(),
  weekly_anchor: z.string().optional(),
});

export const transformQuantitySchema = z.object({
  divide_by: z.number(),
  round: z.union([z.literal("down"), z.literal("up")]),
});

export const transformUsageSchema = z.object({
  divide_by: z.number(),
  round: z.union([z.literal("down"), z.literal("up")]),
});

export const usageRecordSchema = z.object({
  id: z.string(),
  livemode: z.boolean(),
  object: z.literal("usage_record"),
  quantity: z.number(),
  subscription_item: z.string(),
  timestamp: z.number(),
});

export const usageRecordSummarySchema = z.object({
  id: z.string(),
  invoice: z.string().optional().nullable(),
  livemode: z.boolean(),
  object: z.literal("usage_record_summary"),
  period: periodSchema,
  subscription_item: z.string(),
  total_usage: z.number(),
});

export const verificationSessionRedactionSchema = z.object({
  status: z.union([z.literal("processing"), z.literal("redacted")]),
});

export const webhookEndpointSchema = z.object({
  api_version: z.string().optional().nullable(),
  application: z.string().optional().nullable(),
  created: z.number(),
  description: z.string().optional().nullable(),
  enabled_events: z.array(z.string()),
  id: z.string(),
  livemode: z.boolean(),
  metadata: z.record(z.string()),
  object: z.literal("webhook_endpoint"),
  secret: z.string().optional(),
  status: z.string(),
  url: z.string(),
});

export const accountBusinessProfileSchema = z.object({
  mcc: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  product_description: z.string().optional().nullable(),
  support_address: addressSchema.optional().nullable(),
  support_email: z.string().optional().nullable(),
  support_phone: z.string().optional().nullable(),
  support_url: z.string().optional().nullable(),
  url: z.string().optional().nullable(),
});

export const accountCapabilityRequirementsSchema = z.object({
  current_deadline: z.number().optional().nullable(),
  currently_due: z.array(z.string()),
  disabled_reason: z.string().optional().nullable(),
  errors: z.array(accountRequirementsErrorSchema),
  eventually_due: z.array(z.string()),
  past_due: z.array(z.string()),
  pending_verification: z.array(z.string()),
});

export const accountCardIssuingSettingsSchema = z.object({
  tos_acceptance: cardIssuingAccountTermsOfServiceSchema.optional(),
});

export const accountCardPaymentsSettingsSchema = z.object({
  decline_on: accountDeclineChargeOnSchema.optional(),
  statement_descriptor_prefix: z.string().optional().nullable(),
});

export const accountPayoutSettingsSchema = z.object({
  debit_negative_balances: z.boolean(),
  schedule: transferScheduleSchema,
  statement_descriptor: z.string().optional().nullable(),
});

export const accountRequirementsSchema = z.object({
  current_deadline: z.number().optional().nullable(),
  currently_due: z.array(z.string()).optional().nullable(),
  disabled_reason: z.string().optional().nullable(),
  errors: z.array(accountRequirementsErrorSchema).optional().nullable(),
  eventually_due: z.array(z.string()).optional().nullable(),
  past_due: z.array(z.string()).optional().nullable(),
  pending_verification: z.array(z.string()).optional().nullable(),
});

export const balanceAmountSchema = z.object({
  amount: z.number(),
  currency: z.string(),
  source_types: balanceAmountBySourceTypeSchema.optional(),
});

export const balanceDetailSchema = z.object({
  available: z.array(balanceAmountSchema),
});

export const bitcoinReceiverSchema = z.object({
  active: z.boolean(),
  amount: z.number(),
  amount_received: z.number(),
  bitcoin_amount: z.number(),
  bitcoin_amount_received: z.number(),
  bitcoin_uri: z.string(),
  created: z.number(),
  currency: z.string(),
  customer: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  email: z.string().optional().nullable(),
  filled: z.boolean(),
  id: z.string(),
  inbound_address: z.string(),
  livemode: z.boolean(),
  metadata: z.record(z.string()).optional().nullable(),
  object: z.literal("bitcoin_receiver"),
  payment: z.string().optional().nullable(),
  refund_address: z.string().optional().nullable(),
  transactions: z
    .object({
      data: z.array(bitcoinTransactionSchema),
      has_more: z.boolean(),
      object: z.literal("list"),
      url: z.string(),
    })
    .optional(),
  uncaptured_funds: z.boolean(),
  used_for_payment: z.boolean().optional().nullable(),
});

export const chargeOutcomeSchema = z.object({
  network_status: z.string().optional().nullable(),
  reason: z.string().optional().nullable(),
  risk_level: z.string().optional(),
  risk_score: z.number().optional(),
  rule: z.union([z.string(), ruleSchema]).optional(),
  seller_message: z.string().optional().nullable(),
  type: z.string(),
});

export const checkoutSessionPaymentMethodOptionsSchema = z.object({
  acss_debit: checkoutAcssDebitPaymentMethodOptionsSchema.optional(),
  boleto: paymentMethodOptionsBoletoSchema.optional(),
  oxxo: paymentMethodOptionsOxxoSchema.optional(),
});

export const countrySpecSchema = z.object({
  default_currency: z.string(),
  id: z.string(),
  object: z.literal("country_spec"),
  supported_bank_account_currencies: z.record(z.array(z.string())),
  supported_payment_currencies: z.array(z.string()),
  supported_payment_methods: z.array(z.string()),
  supported_transfer_countries: z.array(z.string()),
  verification_fields: countrySpecVerificationFieldsSchema,
});

export const couponSchema = z.object({
  amount_off: z.number().optional().nullable(),
  applies_to: couponAppliesToSchema.optional(),
  created: z.number(),
  currency: z.string().optional().nullable(),
  duration: z.union([
    z.literal("forever"),
    z.literal("once"),
    z.literal("repeating"),
  ]),
  duration_in_months: z.number().optional().nullable(),
  id: z.string(),
  livemode: z.boolean(),
  max_redemptions: z.number().optional().nullable(),
  metadata: z.record(z.string()).optional().nullable(),
  name: z.string().optional().nullable(),
  object: z.literal("coupon"),
  percent_off: z.number().optional().nullable(),
  redeem_by: z.number().optional().nullable(),
  times_redeemed: z.number(),
  valid: z.boolean(),
});

export const creditNoteTaxAmountSchema = z.object({
  amount: z.number(),
  inclusive: z.boolean(),
  tax_rate: z.union([z.string(), taxRateSchema]),
});

export const customerAcceptanceSchema = z.object({
  accepted_at: z.number().optional().nullable(),
  offline: offlineAcceptanceSchema.optional(),
  online: onlineAcceptanceSchema.optional(),
  type: z.union([z.literal("offline"), z.literal("online")]),
});

export const customerTaxSchema = z.object({
  automatic_tax: z.union([
    z.literal("failed"),
    z.literal("not_collecting"),
    z.literal("supported"),
    z.literal("unrecognized_location"),
  ]),
  ip_address: z.string().optional().nullable(),
  location: customerTaxLocationSchema.optional().nullable(),
});

export const eventSchema = z.object({
  account: z.string().optional(),
  api_version: z.string().optional().nullable(),
  created: z.number(),
  data: notificationEventDataSchema,
  id: z.string(),
  livemode: z.boolean(),
  object: z.literal("event"),
  pending_webhooks: z.number(),
  request: notificationEventRequestSchema.optional().nullable(),
  type: z.string(),
});

export const gelatoDocumentReportSchema = z.object({
  address: addressSchema.optional().nullable(),
  dob: gelatoDataDocumentReportDateOfBirthSchema.optional().nullable(),
  error: gelatoDocumentReportErrorSchema.optional().nullable(),
  expiration_date: gelatoDataDocumentReportExpirationDateSchema
    .optional()
    .nullable(),
  files: z.array(z.string()).optional().nullable(),
  first_name: z.string().optional().nullable(),
  issued_date: gelatoDataDocumentReportIssuedDateSchema.optional().nullable(),
  issuing_country: z.string().optional().nullable(),
  last_name: z.string().optional().nullable(),
  number: z.string().optional().nullable(),
  status: z.union([z.literal("unverified"), z.literal("verified")]),
  type: z
    .union([
      z.literal("driving_license"),
      z.literal("id_card"),
      z.literal("passport"),
    ])
    .optional(),
});

export const gelatoIdNumberReportSchema = z.object({
  dob: gelatoDataIdNumberReportDateSchema.optional().nullable(),
  error: gelatoIdNumberReportErrorSchema.optional().nullable(),
  first_name: z.string().optional().nullable(),
  id_number: z.string().optional().nullable(),
  id_number_type: z
    .union([z.literal("br_cpf"), z.literal("sg_nric"), z.literal("us_ssn")])
    .optional(),
  last_name: z.string().optional().nullable(),
  status: z.union([z.literal("unverified"), z.literal("verified")]),
});

export const gelatoSelfieReportSchema = z.object({
  document: z.string().optional().nullable(),
  error: gelatoSelfieReportErrorSchema.optional().nullable(),
  selfie: z.string().optional().nullable(),
  status: z.union([z.literal("unverified"), z.literal("verified")]),
});

export const identityVerificationReportSchema = z.object({
  created: z.number(),
  document: gelatoDocumentReportSchema.optional(),
  id: z.string(),
  id_number: gelatoIdNumberReportSchema.optional(),
  livemode: z.boolean(),
  object: z.literal("identity.verification_report"),
  options: gelatoVerificationReportOptionsSchema,
  selfie: gelatoSelfieReportSchema.optional(),
  type: z.union([z.literal("document"), z.literal("id_number")]),
  verification_session: z.string().optional().nullable(),
});

export const identityVerificationSessionSchema = z.object({
  client_secret: z.string().optional().nullable(),
  created: z.number(),
  id: z.string(),
  last_error: gelatoSessionLastErrorSchema.optional().nullable(),
  last_verification_report: z
    .union([z.string(), identityVerificationReportSchema])
    .optional()
    .nullable(),
  livemode: z.boolean(),
  metadata: z.record(z.string()),
  object: z.literal("identity.verification_session"),
  options: gelatoVerificationSessionOptionsSchema,
  redaction: verificationSessionRedactionSchema.optional().nullable(),
  status: z.union([
    z.literal("canceled"),
    z.literal("processing"),
    z.literal("requires_input"),
    z.literal("verified"),
  ]),
  type: z.union([z.literal("document"), z.literal("id_number")]),
  url: z.string().optional().nullable(),
  verified_outputs: gelatoVerifiedOutputsSchema.optional().nullable(),
});

export const invoiceTaxAmountSchema = z.object({
  amount: z.number(),
  inclusive: z.boolean(),
  tax_rate: z.union([z.string(), taxRateSchema]),
});

export const issuingCardAuthorizationControlsSchema = z.object({
  allowed_categories: z
    .array(
      z.union([
        z.literal("ac_refrigeration_repair"),
        z.literal("accounting_bookkeeping_services"),
        z.literal("advertising_services"),
        z.literal("agricultural_cooperative"),
        z.literal("airlines_air_carriers"),
        z.literal("airports_flying_fields"),
        z.literal("ambulance_services"),
        z.literal("amusement_parks_carnivals"),
        z.literal("antique_reproductions"),
        z.literal("antique_shops"),
        z.literal("aquariums"),
        z.literal("architectural_surveying_services"),
        z.literal("art_dealers_and_galleries"),
        z.literal("artists_supply_and_craft_shops"),
        z.literal("auto_and_home_supply_stores"),
        z.literal("auto_body_repair_shops"),
        z.literal("auto_paint_shops"),
        z.literal("auto_service_shops"),
        z.literal("automated_cash_disburse"),
        z.literal("automated_fuel_dispensers"),
        z.literal("automobile_associations"),
        z.literal("automotive_parts_and_accessories_stores"),
        z.literal("automotive_tire_stores"),
        z.literal("bail_and_bond_payments"),
        z.literal("bakeries"),
        z.literal("bands_orchestras"),
        z.literal("barber_and_beauty_shops"),
        z.literal("betting_casino_gambling"),
        z.literal("bicycle_shops"),
        z.literal("billiard_pool_establishments"),
        z.literal("boat_dealers"),
        z.literal("boat_rentals_and_leases"),
        z.literal("book_stores"),
        z.literal("books_periodicals_and_newspapers"),
        z.literal("bowling_alleys"),
        z.literal("bus_lines"),
        z.literal("business_secretarial_schools"),
        z.literal("buying_shopping_services"),
        z.literal("cable_satellite_and_other_pay_television_and_radio"),
        z.literal("camera_and_photographic_supply_stores"),
        z.literal("candy_nut_and_confectionery_stores"),
        z.literal("car_and_truck_dealers_new_used"),
        z.literal("car_and_truck_dealers_used_only"),
        z.literal("car_rental_agencies"),
        z.literal("car_washes"),
        z.literal("carpentry_services"),
        z.literal("carpet_upholstery_cleaning"),
        z.literal("caterers"),
        z.literal("charitable_and_social_service_organizations_fundraising"),
        z.literal("chemicals_and_allied_products"),
        z.literal("child_care_services"),
        z.literal("childrens_and_infants_wear_stores"),
        z.literal("chiropodists_podiatrists"),
        z.literal("chiropractors"),
        z.literal("cigar_stores_and_stands"),
        z.literal("civic_social_fraternal_associations"),
        z.literal("cleaning_and_maintenance"),
        z.literal("clothing_rental"),
        z.literal("colleges_universities"),
        z.literal("commercial_equipment"),
        z.literal("commercial_footwear"),
        z.literal("commercial_photography_art_and_graphics"),
        z.literal("commuter_transport_and_ferries"),
        z.literal("computer_network_services"),
        z.literal("computer_programming"),
        z.literal("computer_repair"),
        z.literal("computer_software_stores"),
        z.literal("computers_peripherals_and_software"),
        z.literal("concrete_work_services"),
        z.literal("construction_materials"),
        z.literal("consulting_public_relations"),
        z.literal("correspondence_schools"),
        z.literal("cosmetic_stores"),
        z.literal("counseling_services"),
        z.literal("country_clubs"),
        z.literal("courier_services"),
        z.literal("court_costs"),
        z.literal("credit_reporting_agencies"),
        z.literal("cruise_lines"),
        z.literal("dairy_products_stores"),
        z.literal("dance_hall_studios_schools"),
        z.literal("dating_escort_services"),
        z.literal("dentists_orthodontists"),
        z.literal("department_stores"),
        z.literal("detective_agencies"),
        z.literal("digital_goods_applications"),
        z.literal("digital_goods_games"),
        z.literal("digital_goods_large_volume"),
        z.literal("digital_goods_media"),
        z.literal("direct_marketing_catalog_merchant"),
        z.literal("direct_marketing_combination_catalog_and_retail_merchant"),
        z.literal("direct_marketing_inbound_telemarketing"),
        z.literal("direct_marketing_insurance_services"),
        z.literal("direct_marketing_other"),
        z.literal("direct_marketing_outbound_telemarketing"),
        z.literal("direct_marketing_subscription"),
        z.literal("direct_marketing_travel"),
        z.literal("discount_stores"),
        z.literal("doctors"),
        z.literal("door_to_door_sales"),
        z.literal("drapery_window_covering_and_upholstery_stores"),
        z.literal("drinking_places"),
        z.literal("drug_stores_and_pharmacies"),
        z.literal("drugs_drug_proprietaries_and_druggist_sundries"),
        z.literal("dry_cleaners"),
        z.literal("durable_goods"),
        z.literal("duty_free_stores"),
        z.literal("eating_places_restaurants"),
        z.literal("educational_services"),
        z.literal("electric_razor_stores"),
        z.literal("electrical_parts_and_equipment"),
        z.literal("electrical_services"),
        z.literal("electronics_repair_shops"),
        z.literal("electronics_stores"),
        z.literal("elementary_secondary_schools"),
        z.literal("employment_temp_agencies"),
        z.literal("equipment_rental"),
        z.literal("exterminating_services"),
        z.literal("family_clothing_stores"),
        z.literal("fast_food_restaurants"),
        z.literal("financial_institutions"),
        z.literal("fines_government_administrative_entities"),
        z.literal("fireplace_fireplace_screens_and_accessories_stores"),
        z.literal("floor_covering_stores"),
        z.literal("florists"),
        z.literal("florists_supplies_nursery_stock_and_flowers"),
        z.literal("freezer_and_locker_meat_provisioners"),
        z.literal("fuel_dealers_non_automotive"),
        z.literal("funeral_services_crematories"),
        z.literal(
          "furniture_home_furnishings_and_equipment_stores_except_appliances"
        ),
        z.literal("furniture_repair_refinishing"),
        z.literal("furriers_and_fur_shops"),
        z.literal("general_services"),
        z.literal("gift_card_novelty_and_souvenir_shops"),
        z.literal("glass_paint_and_wallpaper_stores"),
        z.literal("glassware_crystal_stores"),
        z.literal("golf_courses_public"),
        z.literal("government_services"),
        z.literal("grocery_stores_supermarkets"),
        z.literal("hardware_equipment_and_supplies"),
        z.literal("hardware_stores"),
        z.literal("health_and_beauty_spas"),
        z.literal("hearing_aids_sales_and_supplies"),
        z.literal("heating_plumbing_a_c"),
        z.literal("hobby_toy_and_game_shops"),
        z.literal("home_supply_warehouse_stores"),
        z.literal("hospitals"),
        z.literal("hotels_motels_and_resorts"),
        z.literal("household_appliance_stores"),
        z.literal("industrial_supplies"),
        z.literal("information_retrieval_services"),
        z.literal("insurance_default"),
        z.literal("insurance_underwriting_premiums"),
        z.literal("intra_company_purchases"),
        z.literal("jewelry_stores_watches_clocks_and_silverware_stores"),
        z.literal("landscaping_services"),
        z.literal("laundries"),
        z.literal("laundry_cleaning_services"),
        z.literal("legal_services_attorneys"),
        z.literal("luggage_and_leather_goods_stores"),
        z.literal("lumber_building_materials_stores"),
        z.literal("manual_cash_disburse"),
        z.literal("marinas_service_and_supplies"),
        z.literal("masonry_stonework_and_plaster"),
        z.literal("massage_parlors"),
        z.literal("medical_and_dental_labs"),
        z.literal(
          "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        ),
        z.literal("medical_services"),
        z.literal("membership_organizations"),
        z.literal("mens_and_boys_clothing_and_accessories_stores"),
        z.literal("mens_womens_clothing_stores"),
        z.literal("metal_service_centers"),
        z.literal("miscellaneous"),
        z.literal("miscellaneous_apparel_and_accessory_shops"),
        z.literal("miscellaneous_auto_dealers"),
        z.literal("miscellaneous_business_services"),
        z.literal("miscellaneous_food_stores"),
        z.literal("miscellaneous_general_merchandise"),
        z.literal("miscellaneous_general_services"),
        z.literal("miscellaneous_home_furnishing_specialty_stores"),
        z.literal("miscellaneous_publishing_and_printing"),
        z.literal("miscellaneous_recreation_services"),
        z.literal("miscellaneous_repair_shops"),
        z.literal("miscellaneous_specialty_retail"),
        z.literal("mobile_home_dealers"),
        z.literal("motion_picture_theaters"),
        z.literal("motor_freight_carriers_and_trucking"),
        z.literal("motor_homes_dealers"),
        z.literal("motor_vehicle_supplies_and_new_parts"),
        z.literal("motorcycle_shops_and_dealers"),
        z.literal("motorcycle_shops_dealers"),
        z.literal("music_stores_musical_instruments_pianos_and_sheet_music"),
        z.literal("news_dealers_and_newsstands"),
        z.literal("non_fi_money_orders"),
        z.literal("non_fi_stored_value_card_purchase_load"),
        z.literal("nondurable_goods"),
        z.literal("nurseries_lawn_and_garden_supply_stores"),
        z.literal("nursing_personal_care"),
        z.literal("office_and_commercial_furniture"),
        z.literal("opticians_eyeglasses"),
        z.literal("optometrists_ophthalmologist"),
        z.literal("orthopedic_goods_prosthetic_devices"),
        z.literal("osteopaths"),
        z.literal("package_stores_beer_wine_and_liquor"),
        z.literal("paints_varnishes_and_supplies"),
        z.literal("parking_lots_garages"),
        z.literal("passenger_railways"),
        z.literal("pawn_shops"),
        z.literal("pet_shops_pet_food_and_supplies"),
        z.literal("petroleum_and_petroleum_products"),
        z.literal("photo_developing"),
        z.literal("photographic_photocopy_microfilm_equipment_and_supplies"),
        z.literal("photographic_studios"),
        z.literal("picture_video_production"),
        z.literal("piece_goods_notions_and_other_dry_goods"),
        z.literal("plumbing_heating_equipment_and_supplies"),
        z.literal("political_organizations"),
        z.literal("postal_services_government_only"),
        z.literal("precious_stones_and_metals_watches_and_jewelry"),
        z.literal("professional_services"),
        z.literal("public_warehousing_and_storage"),
        z.literal("quick_copy_repro_and_blueprint"),
        z.literal("railroads"),
        z.literal("real_estate_agents_and_managers_rentals"),
        z.literal("record_stores"),
        z.literal("recreational_vehicle_rentals"),
        z.literal("religious_goods_stores"),
        z.literal("religious_organizations"),
        z.literal("roofing_siding_sheet_metal"),
        z.literal("secretarial_support_services"),
        z.literal("security_brokers_dealers"),
        z.literal("service_stations"),
        z.literal("sewing_needlework_fabric_and_piece_goods_stores"),
        z.literal("shoe_repair_hat_cleaning"),
        z.literal("shoe_stores"),
        z.literal("small_appliance_repair"),
        z.literal("snowmobile_dealers"),
        z.literal("special_trade_services"),
        z.literal("specialty_cleaning"),
        z.literal("sporting_goods_stores"),
        z.literal("sporting_recreation_camps"),
        z.literal("sports_and_riding_apparel_stores"),
        z.literal("sports_clubs_fields"),
        z.literal("stamp_and_coin_stores"),
        z.literal("stationary_office_supplies_printing_and_writing_paper"),
        z.literal("stationery_stores_office_and_school_supply_stores"),
        z.literal("swimming_pools_sales"),
        z.literal("t_ui_travel_germany"),
        z.literal("tailors_alterations"),
        z.literal("tax_payments_government_agencies"),
        z.literal("tax_preparation_services"),
        z.literal("taxicabs_limousines"),
        z.literal("telecommunication_equipment_and_telephone_sales"),
        z.literal("telecommunication_services"),
        z.literal("telegraph_services"),
        z.literal("tent_and_awning_shops"),
        z.literal("testing_laboratories"),
        z.literal("theatrical_ticket_agencies"),
        z.literal("timeshares"),
        z.literal("tire_retreading_and_repair"),
        z.literal("tolls_bridge_fees"),
        z.literal("tourist_attractions_and_exhibits"),
        z.literal("towing_services"),
        z.literal("trailer_parks_campgrounds"),
        z.literal("transportation_services"),
        z.literal("travel_agencies_tour_operators"),
        z.literal("truck_stop_iteration"),
        z.literal("truck_utility_trailer_rentals"),
        z.literal("typesetting_plate_making_and_related_services"),
        z.literal("typewriter_stores"),
        z.literal("u_s_federal_government_agencies_or_departments"),
        z.literal("uniforms_commercial_clothing"),
        z.literal("used_merchandise_and_secondhand_stores"),
        z.literal("utilities"),
        z.literal("variety_stores"),
        z.literal("veterinary_services"),
        z.literal("video_amusement_game_supplies"),
        z.literal("video_game_arcades"),
        z.literal("video_tape_rental_stores"),
        z.literal("vocational_trade_schools"),
        z.literal("watch_jewelry_repair"),
        z.literal("welding_repair"),
        z.literal("wholesale_clubs"),
        z.literal("wig_and_toupee_stores"),
        z.literal("wires_money_orders"),
        z.literal("womens_accessory_and_specialty_shops"),
        z.literal("womens_ready_to_wear_stores"),
        z.literal("wrecking_and_salvage_yards"),
      ])
    )
    .optional()
    .nullable(),
  blocked_categories: z
    .array(
      z.union([
        z.literal("ac_refrigeration_repair"),
        z.literal("accounting_bookkeeping_services"),
        z.literal("advertising_services"),
        z.literal("agricultural_cooperative"),
        z.literal("airlines_air_carriers"),
        z.literal("airports_flying_fields"),
        z.literal("ambulance_services"),
        z.literal("amusement_parks_carnivals"),
        z.literal("antique_reproductions"),
        z.literal("antique_shops"),
        z.literal("aquariums"),
        z.literal("architectural_surveying_services"),
        z.literal("art_dealers_and_galleries"),
        z.literal("artists_supply_and_craft_shops"),
        z.literal("auto_and_home_supply_stores"),
        z.literal("auto_body_repair_shops"),
        z.literal("auto_paint_shops"),
        z.literal("auto_service_shops"),
        z.literal("automated_cash_disburse"),
        z.literal("automated_fuel_dispensers"),
        z.literal("automobile_associations"),
        z.literal("automotive_parts_and_accessories_stores"),
        z.literal("automotive_tire_stores"),
        z.literal("bail_and_bond_payments"),
        z.literal("bakeries"),
        z.literal("bands_orchestras"),
        z.literal("barber_and_beauty_shops"),
        z.literal("betting_casino_gambling"),
        z.literal("bicycle_shops"),
        z.literal("billiard_pool_establishments"),
        z.literal("boat_dealers"),
        z.literal("boat_rentals_and_leases"),
        z.literal("book_stores"),
        z.literal("books_periodicals_and_newspapers"),
        z.literal("bowling_alleys"),
        z.literal("bus_lines"),
        z.literal("business_secretarial_schools"),
        z.literal("buying_shopping_services"),
        z.literal("cable_satellite_and_other_pay_television_and_radio"),
        z.literal("camera_and_photographic_supply_stores"),
        z.literal("candy_nut_and_confectionery_stores"),
        z.literal("car_and_truck_dealers_new_used"),
        z.literal("car_and_truck_dealers_used_only"),
        z.literal("car_rental_agencies"),
        z.literal("car_washes"),
        z.literal("carpentry_services"),
        z.literal("carpet_upholstery_cleaning"),
        z.literal("caterers"),
        z.literal("charitable_and_social_service_organizations_fundraising"),
        z.literal("chemicals_and_allied_products"),
        z.literal("child_care_services"),
        z.literal("childrens_and_infants_wear_stores"),
        z.literal("chiropodists_podiatrists"),
        z.literal("chiropractors"),
        z.literal("cigar_stores_and_stands"),
        z.literal("civic_social_fraternal_associations"),
        z.literal("cleaning_and_maintenance"),
        z.literal("clothing_rental"),
        z.literal("colleges_universities"),
        z.literal("commercial_equipment"),
        z.literal("commercial_footwear"),
        z.literal("commercial_photography_art_and_graphics"),
        z.literal("commuter_transport_and_ferries"),
        z.literal("computer_network_services"),
        z.literal("computer_programming"),
        z.literal("computer_repair"),
        z.literal("computer_software_stores"),
        z.literal("computers_peripherals_and_software"),
        z.literal("concrete_work_services"),
        z.literal("construction_materials"),
        z.literal("consulting_public_relations"),
        z.literal("correspondence_schools"),
        z.literal("cosmetic_stores"),
        z.literal("counseling_services"),
        z.literal("country_clubs"),
        z.literal("courier_services"),
        z.literal("court_costs"),
        z.literal("credit_reporting_agencies"),
        z.literal("cruise_lines"),
        z.literal("dairy_products_stores"),
        z.literal("dance_hall_studios_schools"),
        z.literal("dating_escort_services"),
        z.literal("dentists_orthodontists"),
        z.literal("department_stores"),
        z.literal("detective_agencies"),
        z.literal("digital_goods_applications"),
        z.literal("digital_goods_games"),
        z.literal("digital_goods_large_volume"),
        z.literal("digital_goods_media"),
        z.literal("direct_marketing_catalog_merchant"),
        z.literal("direct_marketing_combination_catalog_and_retail_merchant"),
        z.literal("direct_marketing_inbound_telemarketing"),
        z.literal("direct_marketing_insurance_services"),
        z.literal("direct_marketing_other"),
        z.literal("direct_marketing_outbound_telemarketing"),
        z.literal("direct_marketing_subscription"),
        z.literal("direct_marketing_travel"),
        z.literal("discount_stores"),
        z.literal("doctors"),
        z.literal("door_to_door_sales"),
        z.literal("drapery_window_covering_and_upholstery_stores"),
        z.literal("drinking_places"),
        z.literal("drug_stores_and_pharmacies"),
        z.literal("drugs_drug_proprietaries_and_druggist_sundries"),
        z.literal("dry_cleaners"),
        z.literal("durable_goods"),
        z.literal("duty_free_stores"),
        z.literal("eating_places_restaurants"),
        z.literal("educational_services"),
        z.literal("electric_razor_stores"),
        z.literal("electrical_parts_and_equipment"),
        z.literal("electrical_services"),
        z.literal("electronics_repair_shops"),
        z.literal("electronics_stores"),
        z.literal("elementary_secondary_schools"),
        z.literal("employment_temp_agencies"),
        z.literal("equipment_rental"),
        z.literal("exterminating_services"),
        z.literal("family_clothing_stores"),
        z.literal("fast_food_restaurants"),
        z.literal("financial_institutions"),
        z.literal("fines_government_administrative_entities"),
        z.literal("fireplace_fireplace_screens_and_accessories_stores"),
        z.literal("floor_covering_stores"),
        z.literal("florists"),
        z.literal("florists_supplies_nursery_stock_and_flowers"),
        z.literal("freezer_and_locker_meat_provisioners"),
        z.literal("fuel_dealers_non_automotive"),
        z.literal("funeral_services_crematories"),
        z.literal(
          "furniture_home_furnishings_and_equipment_stores_except_appliances"
        ),
        z.literal("furniture_repair_refinishing"),
        z.literal("furriers_and_fur_shops"),
        z.literal("general_services"),
        z.literal("gift_card_novelty_and_souvenir_shops"),
        z.literal("glass_paint_and_wallpaper_stores"),
        z.literal("glassware_crystal_stores"),
        z.literal("golf_courses_public"),
        z.literal("government_services"),
        z.literal("grocery_stores_supermarkets"),
        z.literal("hardware_equipment_and_supplies"),
        z.literal("hardware_stores"),
        z.literal("health_and_beauty_spas"),
        z.literal("hearing_aids_sales_and_supplies"),
        z.literal("heating_plumbing_a_c"),
        z.literal("hobby_toy_and_game_shops"),
        z.literal("home_supply_warehouse_stores"),
        z.literal("hospitals"),
        z.literal("hotels_motels_and_resorts"),
        z.literal("household_appliance_stores"),
        z.literal("industrial_supplies"),
        z.literal("information_retrieval_services"),
        z.literal("insurance_default"),
        z.literal("insurance_underwriting_premiums"),
        z.literal("intra_company_purchases"),
        z.literal("jewelry_stores_watches_clocks_and_silverware_stores"),
        z.literal("landscaping_services"),
        z.literal("laundries"),
        z.literal("laundry_cleaning_services"),
        z.literal("legal_services_attorneys"),
        z.literal("luggage_and_leather_goods_stores"),
        z.literal("lumber_building_materials_stores"),
        z.literal("manual_cash_disburse"),
        z.literal("marinas_service_and_supplies"),
        z.literal("masonry_stonework_and_plaster"),
        z.literal("massage_parlors"),
        z.literal("medical_and_dental_labs"),
        z.literal(
          "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        ),
        z.literal("medical_services"),
        z.literal("membership_organizations"),
        z.literal("mens_and_boys_clothing_and_accessories_stores"),
        z.literal("mens_womens_clothing_stores"),
        z.literal("metal_service_centers"),
        z.literal("miscellaneous"),
        z.literal("miscellaneous_apparel_and_accessory_shops"),
        z.literal("miscellaneous_auto_dealers"),
        z.literal("miscellaneous_business_services"),
        z.literal("miscellaneous_food_stores"),
        z.literal("miscellaneous_general_merchandise"),
        z.literal("miscellaneous_general_services"),
        z.literal("miscellaneous_home_furnishing_specialty_stores"),
        z.literal("miscellaneous_publishing_and_printing"),
        z.literal("miscellaneous_recreation_services"),
        z.literal("miscellaneous_repair_shops"),
        z.literal("miscellaneous_specialty_retail"),
        z.literal("mobile_home_dealers"),
        z.literal("motion_picture_theaters"),
        z.literal("motor_freight_carriers_and_trucking"),
        z.literal("motor_homes_dealers"),
        z.literal("motor_vehicle_supplies_and_new_parts"),
        z.literal("motorcycle_shops_and_dealers"),
        z.literal("motorcycle_shops_dealers"),
        z.literal("music_stores_musical_instruments_pianos_and_sheet_music"),
        z.literal("news_dealers_and_newsstands"),
        z.literal("non_fi_money_orders"),
        z.literal("non_fi_stored_value_card_purchase_load"),
        z.literal("nondurable_goods"),
        z.literal("nurseries_lawn_and_garden_supply_stores"),
        z.literal("nursing_personal_care"),
        z.literal("office_and_commercial_furniture"),
        z.literal("opticians_eyeglasses"),
        z.literal("optometrists_ophthalmologist"),
        z.literal("orthopedic_goods_prosthetic_devices"),
        z.literal("osteopaths"),
        z.literal("package_stores_beer_wine_and_liquor"),
        z.literal("paints_varnishes_and_supplies"),
        z.literal("parking_lots_garages"),
        z.literal("passenger_railways"),
        z.literal("pawn_shops"),
        z.literal("pet_shops_pet_food_and_supplies"),
        z.literal("petroleum_and_petroleum_products"),
        z.literal("photo_developing"),
        z.literal("photographic_photocopy_microfilm_equipment_and_supplies"),
        z.literal("photographic_studios"),
        z.literal("picture_video_production"),
        z.literal("piece_goods_notions_and_other_dry_goods"),
        z.literal("plumbing_heating_equipment_and_supplies"),
        z.literal("political_organizations"),
        z.literal("postal_services_government_only"),
        z.literal("precious_stones_and_metals_watches_and_jewelry"),
        z.literal("professional_services"),
        z.literal("public_warehousing_and_storage"),
        z.literal("quick_copy_repro_and_blueprint"),
        z.literal("railroads"),
        z.literal("real_estate_agents_and_managers_rentals"),
        z.literal("record_stores"),
        z.literal("recreational_vehicle_rentals"),
        z.literal("religious_goods_stores"),
        z.literal("religious_organizations"),
        z.literal("roofing_siding_sheet_metal"),
        z.literal("secretarial_support_services"),
        z.literal("security_brokers_dealers"),
        z.literal("service_stations"),
        z.literal("sewing_needlework_fabric_and_piece_goods_stores"),
        z.literal("shoe_repair_hat_cleaning"),
        z.literal("shoe_stores"),
        z.literal("small_appliance_repair"),
        z.literal("snowmobile_dealers"),
        z.literal("special_trade_services"),
        z.literal("specialty_cleaning"),
        z.literal("sporting_goods_stores"),
        z.literal("sporting_recreation_camps"),
        z.literal("sports_and_riding_apparel_stores"),
        z.literal("sports_clubs_fields"),
        z.literal("stamp_and_coin_stores"),
        z.literal("stationary_office_supplies_printing_and_writing_paper"),
        z.literal("stationery_stores_office_and_school_supply_stores"),
        z.literal("swimming_pools_sales"),
        z.literal("t_ui_travel_germany"),
        z.literal("tailors_alterations"),
        z.literal("tax_payments_government_agencies"),
        z.literal("tax_preparation_services"),
        z.literal("taxicabs_limousines"),
        z.literal("telecommunication_equipment_and_telephone_sales"),
        z.literal("telecommunication_services"),
        z.literal("telegraph_services"),
        z.literal("tent_and_awning_shops"),
        z.literal("testing_laboratories"),
        z.literal("theatrical_ticket_agencies"),
        z.literal("timeshares"),
        z.literal("tire_retreading_and_repair"),
        z.literal("tolls_bridge_fees"),
        z.literal("tourist_attractions_and_exhibits"),
        z.literal("towing_services"),
        z.literal("trailer_parks_campgrounds"),
        z.literal("transportation_services"),
        z.literal("travel_agencies_tour_operators"),
        z.literal("truck_stop_iteration"),
        z.literal("truck_utility_trailer_rentals"),
        z.literal("typesetting_plate_making_and_related_services"),
        z.literal("typewriter_stores"),
        z.literal("u_s_federal_government_agencies_or_departments"),
        z.literal("uniforms_commercial_clothing"),
        z.literal("used_merchandise_and_secondhand_stores"),
        z.literal("utilities"),
        z.literal("variety_stores"),
        z.literal("veterinary_services"),
        z.literal("video_amusement_game_supplies"),
        z.literal("video_game_arcades"),
        z.literal("video_tape_rental_stores"),
        z.literal("vocational_trade_schools"),
        z.literal("watch_jewelry_repair"),
        z.literal("welding_repair"),
        z.literal("wholesale_clubs"),
        z.literal("wig_and_toupee_stores"),
        z.literal("wires_money_orders"),
        z.literal("womens_accessory_and_specialty_shops"),
        z.literal("womens_ready_to_wear_stores"),
        z.literal("wrecking_and_salvage_yards"),
      ])
    )
    .optional()
    .nullable(),
  spending_limits: z
    .array(issuingCardSpendingLimitSchema)
    .optional()
    .nullable(),
  spending_limits_currency: z.string().optional().nullable(),
});

export const issuingCardholderAuthorizationControlsSchema = z.object({
  allowed_categories: z
    .array(
      z.union([
        z.literal("ac_refrigeration_repair"),
        z.literal("accounting_bookkeeping_services"),
        z.literal("advertising_services"),
        z.literal("agricultural_cooperative"),
        z.literal("airlines_air_carriers"),
        z.literal("airports_flying_fields"),
        z.literal("ambulance_services"),
        z.literal("amusement_parks_carnivals"),
        z.literal("antique_reproductions"),
        z.literal("antique_shops"),
        z.literal("aquariums"),
        z.literal("architectural_surveying_services"),
        z.literal("art_dealers_and_galleries"),
        z.literal("artists_supply_and_craft_shops"),
        z.literal("auto_and_home_supply_stores"),
        z.literal("auto_body_repair_shops"),
        z.literal("auto_paint_shops"),
        z.literal("auto_service_shops"),
        z.literal("automated_cash_disburse"),
        z.literal("automated_fuel_dispensers"),
        z.literal("automobile_associations"),
        z.literal("automotive_parts_and_accessories_stores"),
        z.literal("automotive_tire_stores"),
        z.literal("bail_and_bond_payments"),
        z.literal("bakeries"),
        z.literal("bands_orchestras"),
        z.literal("barber_and_beauty_shops"),
        z.literal("betting_casino_gambling"),
        z.literal("bicycle_shops"),
        z.literal("billiard_pool_establishments"),
        z.literal("boat_dealers"),
        z.literal("boat_rentals_and_leases"),
        z.literal("book_stores"),
        z.literal("books_periodicals_and_newspapers"),
        z.literal("bowling_alleys"),
        z.literal("bus_lines"),
        z.literal("business_secretarial_schools"),
        z.literal("buying_shopping_services"),
        z.literal("cable_satellite_and_other_pay_television_and_radio"),
        z.literal("camera_and_photographic_supply_stores"),
        z.literal("candy_nut_and_confectionery_stores"),
        z.literal("car_and_truck_dealers_new_used"),
        z.literal("car_and_truck_dealers_used_only"),
        z.literal("car_rental_agencies"),
        z.literal("car_washes"),
        z.literal("carpentry_services"),
        z.literal("carpet_upholstery_cleaning"),
        z.literal("caterers"),
        z.literal("charitable_and_social_service_organizations_fundraising"),
        z.literal("chemicals_and_allied_products"),
        z.literal("child_care_services"),
        z.literal("childrens_and_infants_wear_stores"),
        z.literal("chiropodists_podiatrists"),
        z.literal("chiropractors"),
        z.literal("cigar_stores_and_stands"),
        z.literal("civic_social_fraternal_associations"),
        z.literal("cleaning_and_maintenance"),
        z.literal("clothing_rental"),
        z.literal("colleges_universities"),
        z.literal("commercial_equipment"),
        z.literal("commercial_footwear"),
        z.literal("commercial_photography_art_and_graphics"),
        z.literal("commuter_transport_and_ferries"),
        z.literal("computer_network_services"),
        z.literal("computer_programming"),
        z.literal("computer_repair"),
        z.literal("computer_software_stores"),
        z.literal("computers_peripherals_and_software"),
        z.literal("concrete_work_services"),
        z.literal("construction_materials"),
        z.literal("consulting_public_relations"),
        z.literal("correspondence_schools"),
        z.literal("cosmetic_stores"),
        z.literal("counseling_services"),
        z.literal("country_clubs"),
        z.literal("courier_services"),
        z.literal("court_costs"),
        z.literal("credit_reporting_agencies"),
        z.literal("cruise_lines"),
        z.literal("dairy_products_stores"),
        z.literal("dance_hall_studios_schools"),
        z.literal("dating_escort_services"),
        z.literal("dentists_orthodontists"),
        z.literal("department_stores"),
        z.literal("detective_agencies"),
        z.literal("digital_goods_applications"),
        z.literal("digital_goods_games"),
        z.literal("digital_goods_large_volume"),
        z.literal("digital_goods_media"),
        z.literal("direct_marketing_catalog_merchant"),
        z.literal("direct_marketing_combination_catalog_and_retail_merchant"),
        z.literal("direct_marketing_inbound_telemarketing"),
        z.literal("direct_marketing_insurance_services"),
        z.literal("direct_marketing_other"),
        z.literal("direct_marketing_outbound_telemarketing"),
        z.literal("direct_marketing_subscription"),
        z.literal("direct_marketing_travel"),
        z.literal("discount_stores"),
        z.literal("doctors"),
        z.literal("door_to_door_sales"),
        z.literal("drapery_window_covering_and_upholstery_stores"),
        z.literal("drinking_places"),
        z.literal("drug_stores_and_pharmacies"),
        z.literal("drugs_drug_proprietaries_and_druggist_sundries"),
        z.literal("dry_cleaners"),
        z.literal("durable_goods"),
        z.literal("duty_free_stores"),
        z.literal("eating_places_restaurants"),
        z.literal("educational_services"),
        z.literal("electric_razor_stores"),
        z.literal("electrical_parts_and_equipment"),
        z.literal("electrical_services"),
        z.literal("electronics_repair_shops"),
        z.literal("electronics_stores"),
        z.literal("elementary_secondary_schools"),
        z.literal("employment_temp_agencies"),
        z.literal("equipment_rental"),
        z.literal("exterminating_services"),
        z.literal("family_clothing_stores"),
        z.literal("fast_food_restaurants"),
        z.literal("financial_institutions"),
        z.literal("fines_government_administrative_entities"),
        z.literal("fireplace_fireplace_screens_and_accessories_stores"),
        z.literal("floor_covering_stores"),
        z.literal("florists"),
        z.literal("florists_supplies_nursery_stock_and_flowers"),
        z.literal("freezer_and_locker_meat_provisioners"),
        z.literal("fuel_dealers_non_automotive"),
        z.literal("funeral_services_crematories"),
        z.literal(
          "furniture_home_furnishings_and_equipment_stores_except_appliances"
        ),
        z.literal("furniture_repair_refinishing"),
        z.literal("furriers_and_fur_shops"),
        z.literal("general_services"),
        z.literal("gift_card_novelty_and_souvenir_shops"),
        z.literal("glass_paint_and_wallpaper_stores"),
        z.literal("glassware_crystal_stores"),
        z.literal("golf_courses_public"),
        z.literal("government_services"),
        z.literal("grocery_stores_supermarkets"),
        z.literal("hardware_equipment_and_supplies"),
        z.literal("hardware_stores"),
        z.literal("health_and_beauty_spas"),
        z.literal("hearing_aids_sales_and_supplies"),
        z.literal("heating_plumbing_a_c"),
        z.literal("hobby_toy_and_game_shops"),
        z.literal("home_supply_warehouse_stores"),
        z.literal("hospitals"),
        z.literal("hotels_motels_and_resorts"),
        z.literal("household_appliance_stores"),
        z.literal("industrial_supplies"),
        z.literal("information_retrieval_services"),
        z.literal("insurance_default"),
        z.literal("insurance_underwriting_premiums"),
        z.literal("intra_company_purchases"),
        z.literal("jewelry_stores_watches_clocks_and_silverware_stores"),
        z.literal("landscaping_services"),
        z.literal("laundries"),
        z.literal("laundry_cleaning_services"),
        z.literal("legal_services_attorneys"),
        z.literal("luggage_and_leather_goods_stores"),
        z.literal("lumber_building_materials_stores"),
        z.literal("manual_cash_disburse"),
        z.literal("marinas_service_and_supplies"),
        z.literal("masonry_stonework_and_plaster"),
        z.literal("massage_parlors"),
        z.literal("medical_and_dental_labs"),
        z.literal(
          "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        ),
        z.literal("medical_services"),
        z.literal("membership_organizations"),
        z.literal("mens_and_boys_clothing_and_accessories_stores"),
        z.literal("mens_womens_clothing_stores"),
        z.literal("metal_service_centers"),
        z.literal("miscellaneous"),
        z.literal("miscellaneous_apparel_and_accessory_shops"),
        z.literal("miscellaneous_auto_dealers"),
        z.literal("miscellaneous_business_services"),
        z.literal("miscellaneous_food_stores"),
        z.literal("miscellaneous_general_merchandise"),
        z.literal("miscellaneous_general_services"),
        z.literal("miscellaneous_home_furnishing_specialty_stores"),
        z.literal("miscellaneous_publishing_and_printing"),
        z.literal("miscellaneous_recreation_services"),
        z.literal("miscellaneous_repair_shops"),
        z.literal("miscellaneous_specialty_retail"),
        z.literal("mobile_home_dealers"),
        z.literal("motion_picture_theaters"),
        z.literal("motor_freight_carriers_and_trucking"),
        z.literal("motor_homes_dealers"),
        z.literal("motor_vehicle_supplies_and_new_parts"),
        z.literal("motorcycle_shops_and_dealers"),
        z.literal("motorcycle_shops_dealers"),
        z.literal("music_stores_musical_instruments_pianos_and_sheet_music"),
        z.literal("news_dealers_and_newsstands"),
        z.literal("non_fi_money_orders"),
        z.literal("non_fi_stored_value_card_purchase_load"),
        z.literal("nondurable_goods"),
        z.literal("nurseries_lawn_and_garden_supply_stores"),
        z.literal("nursing_personal_care"),
        z.literal("office_and_commercial_furniture"),
        z.literal("opticians_eyeglasses"),
        z.literal("optometrists_ophthalmologist"),
        z.literal("orthopedic_goods_prosthetic_devices"),
        z.literal("osteopaths"),
        z.literal("package_stores_beer_wine_and_liquor"),
        z.literal("paints_varnishes_and_supplies"),
        z.literal("parking_lots_garages"),
        z.literal("passenger_railways"),
        z.literal("pawn_shops"),
        z.literal("pet_shops_pet_food_and_supplies"),
        z.literal("petroleum_and_petroleum_products"),
        z.literal("photo_developing"),
        z.literal("photographic_photocopy_microfilm_equipment_and_supplies"),
        z.literal("photographic_studios"),
        z.literal("picture_video_production"),
        z.literal("piece_goods_notions_and_other_dry_goods"),
        z.literal("plumbing_heating_equipment_and_supplies"),
        z.literal("political_organizations"),
        z.literal("postal_services_government_only"),
        z.literal("precious_stones_and_metals_watches_and_jewelry"),
        z.literal("professional_services"),
        z.literal("public_warehousing_and_storage"),
        z.literal("quick_copy_repro_and_blueprint"),
        z.literal("railroads"),
        z.literal("real_estate_agents_and_managers_rentals"),
        z.literal("record_stores"),
        z.literal("recreational_vehicle_rentals"),
        z.literal("religious_goods_stores"),
        z.literal("religious_organizations"),
        z.literal("roofing_siding_sheet_metal"),
        z.literal("secretarial_support_services"),
        z.literal("security_brokers_dealers"),
        z.literal("service_stations"),
        z.literal("sewing_needlework_fabric_and_piece_goods_stores"),
        z.literal("shoe_repair_hat_cleaning"),
        z.literal("shoe_stores"),
        z.literal("small_appliance_repair"),
        z.literal("snowmobile_dealers"),
        z.literal("special_trade_services"),
        z.literal("specialty_cleaning"),
        z.literal("sporting_goods_stores"),
        z.literal("sporting_recreation_camps"),
        z.literal("sports_and_riding_apparel_stores"),
        z.literal("sports_clubs_fields"),
        z.literal("stamp_and_coin_stores"),
        z.literal("stationary_office_supplies_printing_and_writing_paper"),
        z.literal("stationery_stores_office_and_school_supply_stores"),
        z.literal("swimming_pools_sales"),
        z.literal("t_ui_travel_germany"),
        z.literal("tailors_alterations"),
        z.literal("tax_payments_government_agencies"),
        z.literal("tax_preparation_services"),
        z.literal("taxicabs_limousines"),
        z.literal("telecommunication_equipment_and_telephone_sales"),
        z.literal("telecommunication_services"),
        z.literal("telegraph_services"),
        z.literal("tent_and_awning_shops"),
        z.literal("testing_laboratories"),
        z.literal("theatrical_ticket_agencies"),
        z.literal("timeshares"),
        z.literal("tire_retreading_and_repair"),
        z.literal("tolls_bridge_fees"),
        z.literal("tourist_attractions_and_exhibits"),
        z.literal("towing_services"),
        z.literal("trailer_parks_campgrounds"),
        z.literal("transportation_services"),
        z.literal("travel_agencies_tour_operators"),
        z.literal("truck_stop_iteration"),
        z.literal("truck_utility_trailer_rentals"),
        z.literal("typesetting_plate_making_and_related_services"),
        z.literal("typewriter_stores"),
        z.literal("u_s_federal_government_agencies_or_departments"),
        z.literal("uniforms_commercial_clothing"),
        z.literal("used_merchandise_and_secondhand_stores"),
        z.literal("utilities"),
        z.literal("variety_stores"),
        z.literal("veterinary_services"),
        z.literal("video_amusement_game_supplies"),
        z.literal("video_game_arcades"),
        z.literal("video_tape_rental_stores"),
        z.literal("vocational_trade_schools"),
        z.literal("watch_jewelry_repair"),
        z.literal("welding_repair"),
        z.literal("wholesale_clubs"),
        z.literal("wig_and_toupee_stores"),
        z.literal("wires_money_orders"),
        z.literal("womens_accessory_and_specialty_shops"),
        z.literal("womens_ready_to_wear_stores"),
        z.literal("wrecking_and_salvage_yards"),
      ])
    )
    .optional()
    .nullable(),
  blocked_categories: z
    .array(
      z.union([
        z.literal("ac_refrigeration_repair"),
        z.literal("accounting_bookkeeping_services"),
        z.literal("advertising_services"),
        z.literal("agricultural_cooperative"),
        z.literal("airlines_air_carriers"),
        z.literal("airports_flying_fields"),
        z.literal("ambulance_services"),
        z.literal("amusement_parks_carnivals"),
        z.literal("antique_reproductions"),
        z.literal("antique_shops"),
        z.literal("aquariums"),
        z.literal("architectural_surveying_services"),
        z.literal("art_dealers_and_galleries"),
        z.literal("artists_supply_and_craft_shops"),
        z.literal("auto_and_home_supply_stores"),
        z.literal("auto_body_repair_shops"),
        z.literal("auto_paint_shops"),
        z.literal("auto_service_shops"),
        z.literal("automated_cash_disburse"),
        z.literal("automated_fuel_dispensers"),
        z.literal("automobile_associations"),
        z.literal("automotive_parts_and_accessories_stores"),
        z.literal("automotive_tire_stores"),
        z.literal("bail_and_bond_payments"),
        z.literal("bakeries"),
        z.literal("bands_orchestras"),
        z.literal("barber_and_beauty_shops"),
        z.literal("betting_casino_gambling"),
        z.literal("bicycle_shops"),
        z.literal("billiard_pool_establishments"),
        z.literal("boat_dealers"),
        z.literal("boat_rentals_and_leases"),
        z.literal("book_stores"),
        z.literal("books_periodicals_and_newspapers"),
        z.literal("bowling_alleys"),
        z.literal("bus_lines"),
        z.literal("business_secretarial_schools"),
        z.literal("buying_shopping_services"),
        z.literal("cable_satellite_and_other_pay_television_and_radio"),
        z.literal("camera_and_photographic_supply_stores"),
        z.literal("candy_nut_and_confectionery_stores"),
        z.literal("car_and_truck_dealers_new_used"),
        z.literal("car_and_truck_dealers_used_only"),
        z.literal("car_rental_agencies"),
        z.literal("car_washes"),
        z.literal("carpentry_services"),
        z.literal("carpet_upholstery_cleaning"),
        z.literal("caterers"),
        z.literal("charitable_and_social_service_organizations_fundraising"),
        z.literal("chemicals_and_allied_products"),
        z.literal("child_care_services"),
        z.literal("childrens_and_infants_wear_stores"),
        z.literal("chiropodists_podiatrists"),
        z.literal("chiropractors"),
        z.literal("cigar_stores_and_stands"),
        z.literal("civic_social_fraternal_associations"),
        z.literal("cleaning_and_maintenance"),
        z.literal("clothing_rental"),
        z.literal("colleges_universities"),
        z.literal("commercial_equipment"),
        z.literal("commercial_footwear"),
        z.literal("commercial_photography_art_and_graphics"),
        z.literal("commuter_transport_and_ferries"),
        z.literal("computer_network_services"),
        z.literal("computer_programming"),
        z.literal("computer_repair"),
        z.literal("computer_software_stores"),
        z.literal("computers_peripherals_and_software"),
        z.literal("concrete_work_services"),
        z.literal("construction_materials"),
        z.literal("consulting_public_relations"),
        z.literal("correspondence_schools"),
        z.literal("cosmetic_stores"),
        z.literal("counseling_services"),
        z.literal("country_clubs"),
        z.literal("courier_services"),
        z.literal("court_costs"),
        z.literal("credit_reporting_agencies"),
        z.literal("cruise_lines"),
        z.literal("dairy_products_stores"),
        z.literal("dance_hall_studios_schools"),
        z.literal("dating_escort_services"),
        z.literal("dentists_orthodontists"),
        z.literal("department_stores"),
        z.literal("detective_agencies"),
        z.literal("digital_goods_applications"),
        z.literal("digital_goods_games"),
        z.literal("digital_goods_large_volume"),
        z.literal("digital_goods_media"),
        z.literal("direct_marketing_catalog_merchant"),
        z.literal("direct_marketing_combination_catalog_and_retail_merchant"),
        z.literal("direct_marketing_inbound_telemarketing"),
        z.literal("direct_marketing_insurance_services"),
        z.literal("direct_marketing_other"),
        z.literal("direct_marketing_outbound_telemarketing"),
        z.literal("direct_marketing_subscription"),
        z.literal("direct_marketing_travel"),
        z.literal("discount_stores"),
        z.literal("doctors"),
        z.literal("door_to_door_sales"),
        z.literal("drapery_window_covering_and_upholstery_stores"),
        z.literal("drinking_places"),
        z.literal("drug_stores_and_pharmacies"),
        z.literal("drugs_drug_proprietaries_and_druggist_sundries"),
        z.literal("dry_cleaners"),
        z.literal("durable_goods"),
        z.literal("duty_free_stores"),
        z.literal("eating_places_restaurants"),
        z.literal("educational_services"),
        z.literal("electric_razor_stores"),
        z.literal("electrical_parts_and_equipment"),
        z.literal("electrical_services"),
        z.literal("electronics_repair_shops"),
        z.literal("electronics_stores"),
        z.literal("elementary_secondary_schools"),
        z.literal("employment_temp_agencies"),
        z.literal("equipment_rental"),
        z.literal("exterminating_services"),
        z.literal("family_clothing_stores"),
        z.literal("fast_food_restaurants"),
        z.literal("financial_institutions"),
        z.literal("fines_government_administrative_entities"),
        z.literal("fireplace_fireplace_screens_and_accessories_stores"),
        z.literal("floor_covering_stores"),
        z.literal("florists"),
        z.literal("florists_supplies_nursery_stock_and_flowers"),
        z.literal("freezer_and_locker_meat_provisioners"),
        z.literal("fuel_dealers_non_automotive"),
        z.literal("funeral_services_crematories"),
        z.literal(
          "furniture_home_furnishings_and_equipment_stores_except_appliances"
        ),
        z.literal("furniture_repair_refinishing"),
        z.literal("furriers_and_fur_shops"),
        z.literal("general_services"),
        z.literal("gift_card_novelty_and_souvenir_shops"),
        z.literal("glass_paint_and_wallpaper_stores"),
        z.literal("glassware_crystal_stores"),
        z.literal("golf_courses_public"),
        z.literal("government_services"),
        z.literal("grocery_stores_supermarkets"),
        z.literal("hardware_equipment_and_supplies"),
        z.literal("hardware_stores"),
        z.literal("health_and_beauty_spas"),
        z.literal("hearing_aids_sales_and_supplies"),
        z.literal("heating_plumbing_a_c"),
        z.literal("hobby_toy_and_game_shops"),
        z.literal("home_supply_warehouse_stores"),
        z.literal("hospitals"),
        z.literal("hotels_motels_and_resorts"),
        z.literal("household_appliance_stores"),
        z.literal("industrial_supplies"),
        z.literal("information_retrieval_services"),
        z.literal("insurance_default"),
        z.literal("insurance_underwriting_premiums"),
        z.literal("intra_company_purchases"),
        z.literal("jewelry_stores_watches_clocks_and_silverware_stores"),
        z.literal("landscaping_services"),
        z.literal("laundries"),
        z.literal("laundry_cleaning_services"),
        z.literal("legal_services_attorneys"),
        z.literal("luggage_and_leather_goods_stores"),
        z.literal("lumber_building_materials_stores"),
        z.literal("manual_cash_disburse"),
        z.literal("marinas_service_and_supplies"),
        z.literal("masonry_stonework_and_plaster"),
        z.literal("massage_parlors"),
        z.literal("medical_and_dental_labs"),
        z.literal(
          "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        ),
        z.literal("medical_services"),
        z.literal("membership_organizations"),
        z.literal("mens_and_boys_clothing_and_accessories_stores"),
        z.literal("mens_womens_clothing_stores"),
        z.literal("metal_service_centers"),
        z.literal("miscellaneous"),
        z.literal("miscellaneous_apparel_and_accessory_shops"),
        z.literal("miscellaneous_auto_dealers"),
        z.literal("miscellaneous_business_services"),
        z.literal("miscellaneous_food_stores"),
        z.literal("miscellaneous_general_merchandise"),
        z.literal("miscellaneous_general_services"),
        z.literal("miscellaneous_home_furnishing_specialty_stores"),
        z.literal("miscellaneous_publishing_and_printing"),
        z.literal("miscellaneous_recreation_services"),
        z.literal("miscellaneous_repair_shops"),
        z.literal("miscellaneous_specialty_retail"),
        z.literal("mobile_home_dealers"),
        z.literal("motion_picture_theaters"),
        z.literal("motor_freight_carriers_and_trucking"),
        z.literal("motor_homes_dealers"),
        z.literal("motor_vehicle_supplies_and_new_parts"),
        z.literal("motorcycle_shops_and_dealers"),
        z.literal("motorcycle_shops_dealers"),
        z.literal("music_stores_musical_instruments_pianos_and_sheet_music"),
        z.literal("news_dealers_and_newsstands"),
        z.literal("non_fi_money_orders"),
        z.literal("non_fi_stored_value_card_purchase_load"),
        z.literal("nondurable_goods"),
        z.literal("nurseries_lawn_and_garden_supply_stores"),
        z.literal("nursing_personal_care"),
        z.literal("office_and_commercial_furniture"),
        z.literal("opticians_eyeglasses"),
        z.literal("optometrists_ophthalmologist"),
        z.literal("orthopedic_goods_prosthetic_devices"),
        z.literal("osteopaths"),
        z.literal("package_stores_beer_wine_and_liquor"),
        z.literal("paints_varnishes_and_supplies"),
        z.literal("parking_lots_garages"),
        z.literal("passenger_railways"),
        z.literal("pawn_shops"),
        z.literal("pet_shops_pet_food_and_supplies"),
        z.literal("petroleum_and_petroleum_products"),
        z.literal("photo_developing"),
        z.literal("photographic_photocopy_microfilm_equipment_and_supplies"),
        z.literal("photographic_studios"),
        z.literal("picture_video_production"),
        z.literal("piece_goods_notions_and_other_dry_goods"),
        z.literal("plumbing_heating_equipment_and_supplies"),
        z.literal("political_organizations"),
        z.literal("postal_services_government_only"),
        z.literal("precious_stones_and_metals_watches_and_jewelry"),
        z.literal("professional_services"),
        z.literal("public_warehousing_and_storage"),
        z.literal("quick_copy_repro_and_blueprint"),
        z.literal("railroads"),
        z.literal("real_estate_agents_and_managers_rentals"),
        z.literal("record_stores"),
        z.literal("recreational_vehicle_rentals"),
        z.literal("religious_goods_stores"),
        z.literal("religious_organizations"),
        z.literal("roofing_siding_sheet_metal"),
        z.literal("secretarial_support_services"),
        z.literal("security_brokers_dealers"),
        z.literal("service_stations"),
        z.literal("sewing_needlework_fabric_and_piece_goods_stores"),
        z.literal("shoe_repair_hat_cleaning"),
        z.literal("shoe_stores"),
        z.literal("small_appliance_repair"),
        z.literal("snowmobile_dealers"),
        z.literal("special_trade_services"),
        z.literal("specialty_cleaning"),
        z.literal("sporting_goods_stores"),
        z.literal("sporting_recreation_camps"),
        z.literal("sports_and_riding_apparel_stores"),
        z.literal("sports_clubs_fields"),
        z.literal("stamp_and_coin_stores"),
        z.literal("stationary_office_supplies_printing_and_writing_paper"),
        z.literal("stationery_stores_office_and_school_supply_stores"),
        z.literal("swimming_pools_sales"),
        z.literal("t_ui_travel_germany"),
        z.literal("tailors_alterations"),
        z.literal("tax_payments_government_agencies"),
        z.literal("tax_preparation_services"),
        z.literal("taxicabs_limousines"),
        z.literal("telecommunication_equipment_and_telephone_sales"),
        z.literal("telecommunication_services"),
        z.literal("telegraph_services"),
        z.literal("tent_and_awning_shops"),
        z.literal("testing_laboratories"),
        z.literal("theatrical_ticket_agencies"),
        z.literal("timeshares"),
        z.literal("tire_retreading_and_repair"),
        z.literal("tolls_bridge_fees"),
        z.literal("tourist_attractions_and_exhibits"),
        z.literal("towing_services"),
        z.literal("trailer_parks_campgrounds"),
        z.literal("transportation_services"),
        z.literal("travel_agencies_tour_operators"),
        z.literal("truck_stop_iteration"),
        z.literal("truck_utility_trailer_rentals"),
        z.literal("typesetting_plate_making_and_related_services"),
        z.literal("typewriter_stores"),
        z.literal("u_s_federal_government_agencies_or_departments"),
        z.literal("uniforms_commercial_clothing"),
        z.literal("used_merchandise_and_secondhand_stores"),
        z.literal("utilities"),
        z.literal("variety_stores"),
        z.literal("veterinary_services"),
        z.literal("video_amusement_game_supplies"),
        z.literal("video_game_arcades"),
        z.literal("video_tape_rental_stores"),
        z.literal("vocational_trade_schools"),
        z.literal("watch_jewelry_repair"),
        z.literal("welding_repair"),
        z.literal("wholesale_clubs"),
        z.literal("wig_and_toupee_stores"),
        z.literal("wires_money_orders"),
        z.literal("womens_accessory_and_specialty_shops"),
        z.literal("womens_ready_to_wear_stores"),
        z.literal("wrecking_and_salvage_yards"),
      ])
    )
    .optional()
    .nullable(),
  spending_limits: z
    .array(issuingCardholderSpendingLimitSchema)
    .optional()
    .nullable(),
  spending_limits_currency: z.string().optional().nullable(),
});

export const issuingTransactionFlightDataSchema = z.object({
  departure_at: z.number().optional().nullable(),
  passenger_name: z.string().optional().nullable(),
  refundable: z.boolean().optional().nullable(),
  segments: z
    .array(issuingTransactionFlightDataLegSchema)
    .optional()
    .nullable(),
  travel_agency: z.string().optional().nullable(),
});

export const issuingTransactionPurchaseDetailsSchema = z.object({
  flight: issuingTransactionFlightDataSchema.optional().nullable(),
  fuel: issuingTransactionFuelDataSchema.optional().nullable(),
  lodging: issuingTransactionLodgingDataSchema.optional().nullable(),
  receipt: z.array(issuingTransactionReceiptDataSchema).optional().nullable(),
  reference: z.string().optional().nullable(),
});

export const lineItemsTaxAmountSchema = z.object({
  amount: z.number(),
  rate: taxRateSchema,
});

export const mandatePaymentMethodDetailsSchema = z.object({
  acss_debit: mandateAcssDebitSchema.optional(),
  au_becs_debit: mandateAuBecsDebitSchema.optional(),
  bacs_debit: mandateBacsDebitSchema.optional(),
  card: cardMandatePaymentMethodDetailsSchema.optional(),
  sepa_debit: mandateSepaDebitSchema.optional(),
  type: z.string(),
});

export const paymentIntentNextActionSchema = z.object({
  alipay_handle_redirect: paymentIntentNextActionAlipayHandleRedirectSchema.optional(),
  boleto_display_details: paymentIntentNextActionBoletoSchema.optional(),
  oxxo_display_details: paymentIntentNextActionDisplayOxxoDetailsSchema.optional(),
  redirect_to_url: paymentIntentNextActionRedirectToUrlSchema.optional(),
  type: z.string(),
  use_stripe_sdk: z.record(z.any()).optional(),
  verify_with_microdeposits: paymentIntentNextActionVerifyWithMicrodepositsSchema.optional(),
  wechat_pay_display_qr_code: paymentIntentNextActionWechatPayDisplayQrCodeSchema.optional(),
  wechat_pay_redirect_to_android_app: paymentIntentNextActionWechatPayRedirectToAndroidAppSchema.optional(),
  wechat_pay_redirect_to_ios_app: paymentIntentNextActionWechatPayRedirectToIosAppSchema.optional(),
});

export const paymentIntentPaymentMethodOptionsAcssDebitSchema = z.object({
  mandate_options: paymentIntentPaymentMethodOptionsMandateOptionsAcssDebitSchema.optional(),
  verification_method: z
    .union([
      z.literal("automatic"),
      z.literal("instant"),
      z.literal("microdeposits"),
    ])
    .optional(),
});

export const paymentIntentPaymentMethodOptionsCardSchema = z.object({
  installments: paymentMethodOptionsCardInstallmentsSchema
    .optional()
    .nullable(),
  network: z
    .union([
      z.literal("amex"),
      z.literal("cartes_bancaires"),
      z.literal("diners"),
      z.literal("discover"),
      z.literal("interac"),
      z.literal("jcb"),
      z.literal("mastercard"),
      z.literal("unionpay"),
      z.literal("unknown"),
      z.literal("visa"),
    ])
    .optional(),
  request_three_d_secure: z
    .union([
      z.literal("any"),
      z.literal("automatic"),
      z.literal("challenge_only"),
    ])
    .optional(),
});

export const paymentMethodCardWalletSchema = z.object({
  amex_express_checkout: paymentMethodCardWalletAmexExpressCheckoutSchema.optional(),
  apple_pay: paymentMethodCardWalletApplePaySchema.optional(),
  dynamic_last4: z.string().optional().nullable(),
  google_pay: paymentMethodCardWalletGooglePaySchema.optional(),
  masterpass: paymentMethodCardWalletMasterpassSchema.optional(),
  samsung_pay: paymentMethodCardWalletSamsungPaySchema.optional(),
  type: z.union([
    z.literal("amex_express_checkout"),
    z.literal("apple_pay"),
    z.literal("google_pay"),
    z.literal("masterpass"),
    z.literal("samsung_pay"),
    z.literal("visa_checkout"),
  ]),
  visa_checkout: paymentMethodCardWalletVisaCheckoutSchema.optional(),
});

export const paymentMethodDetailsCardInstallmentsSchema = z.object({
  plan: paymentMethodDetailsCardInstallmentsPlanSchema.optional().nullable(),
});

export const paymentMethodDetailsCardPresentSchema = z.object({
  brand: z.string().optional().nullable(),
  cardholder_name: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  emv_auth_data: z.string().optional().nullable(),
  exp_month: z.number(),
  exp_year: z.number(),
  fingerprint: z.string().optional().nullable(),
  funding: z.string().optional().nullable(),
  generated_card: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  network: z.string().optional().nullable(),
  read_method: z
    .union([
      z.literal("contact_emv"),
      z.literal("contactless_emv"),
      z.literal("contactless_magstripe_mode"),
      z.literal("magnetic_stripe_fallback"),
      z.literal("magnetic_stripe_track2"),
    ])
    .optional(),
  receipt: paymentMethodDetailsCardPresentReceiptSchema.optional().nullable(),
});

export const paymentMethodDetailsCardWalletSchema = z.object({
  amex_express_checkout: paymentMethodDetailsCardWalletAmexExpressCheckoutSchema.optional(),
  apple_pay: paymentMethodDetailsCardWalletApplePaySchema.optional(),
  dynamic_last4: z.string().optional().nullable(),
  google_pay: paymentMethodDetailsCardWalletGooglePaySchema.optional(),
  masterpass: paymentMethodDetailsCardWalletMasterpassSchema.optional(),
  samsung_pay: paymentMethodDetailsCardWalletSamsungPaySchema.optional(),
  type: z.union([
    z.literal("amex_express_checkout"),
    z.literal("apple_pay"),
    z.literal("google_pay"),
    z.literal("masterpass"),
    z.literal("samsung_pay"),
    z.literal("visa_checkout"),
  ]),
  visa_checkout: paymentMethodDetailsCardWalletVisaCheckoutSchema.optional(),
});

export const paymentMethodDetailsInteracPresentSchema = z.object({
  brand: z.string().optional().nullable(),
  cardholder_name: z.string().optional().nullable(),
  country: z.string().optional().nullable(),
  emv_auth_data: z.string().optional().nullable(),
  exp_month: z.number(),
  exp_year: z.number(),
  fingerprint: z.string().optional().nullable(),
  funding: z.string().optional().nullable(),
  generated_card: z.string().optional().nullable(),
  last4: z.string().optional().nullable(),
  network: z.string().optional().nullable(),
  preferred_locales: z.array(z.string()).optional().nullable(),
  read_method: z
    .union([
      z.literal("contact_emv"),
      z.literal("contactless_emv"),
      z.literal("contactless_magstripe_mode"),
      z.literal("magnetic_stripe_fallback"),
      z.literal("magnetic_stripe_track2"),
    ])
    .optional(),
  receipt: paymentMethodDetailsInteracPresentReceiptSchema
    .optional()
    .nullable(),
});

export const paymentPagesCheckoutSessionCustomerDetailsSchema = z.object({
  email: z.string().optional().nullable(),
  tax_exempt: z
    .union([z.literal("exempt"), z.literal("none"), z.literal("reverse")])
    .optional(),
  tax_ids: z
    .array(paymentPagesCheckoutSessionTaxIdSchema)
    .optional()
    .nullable(),
});

export const portalSubscriptionUpdateSchema = z.object({
  default_allowed_updates: z.array(
    z.union([
      z.literal("price"),
      z.literal("promotion_code"),
      z.literal("quantity"),
    ])
  ),
  enabled: z.boolean(),
  products: z
    .array(portalSubscriptionUpdateProductSchema)
    .optional()
    .nullable(),
  proration_behavior: z.union([
    z.literal("always_invoice"),
    z.literal("create_prorations"),
    z.literal("none"),
  ]),
});

export const productSchema = z.object({
  active: z.boolean(),
  created: z.number(),
  description: z.string().optional().nullable(),
  id: z.string(),
  images: z.array(z.string()),
  livemode: z.boolean(),
  metadata: z.record(z.string()),
  name: z.string(),
  object: z.literal("product"),
  package_dimensions: packageDimensionsSchema.optional().nullable(),
  shippable: z.boolean().optional().nullable(),
  statement_descriptor: z.string().optional().nullable(),
  tax_code: z.union([z.string(), taxCodeSchema]).optional().nullable(),
  unit_label: z.string().optional().nullable(),
  updated: z.number(),
  url: z.string().optional().nullable(),
});

export const radarValueListSchema = z.object({
  alias: z.string(),
  created: z.number(),
  created_by: z.string(),
  id: z.string(),
  item_type: z.union([
    z.literal("card_bin"),
    z.literal("card_fingerprint"),
    z.literal("case_sensitive_string"),
    z.literal("country"),
    z.literal("email"),
    z.literal("ip_address"),
    z.literal("string"),
  ]),
  list_items: z.object({
    data: z.array(radarValueListItemSchema),
    has_more: z.boolean(),
    object: z.literal("list"),
    url: z.string(),
  }),
  livemode: z.boolean(),
  metadata: z.record(z.string()),
  name: z.string(),
  object: z.literal("radar.value_list"),
});

export const setupAttemptPaymentMethodDetailsCardSchema = z.object({
  three_d_secure: threeDSecureDetailsSchema.optional().nullable(),
});

export const setupIntentNextActionSchema = z.object({
  redirect_to_url: setupIntentNextActionRedirectToUrlSchema.optional(),
  type: z.string(),
  use_stripe_sdk: z.record(z.any()).optional(),
  verify_with_microdeposits: setupIntentNextActionVerifyWithMicrodepositsSchema.optional(),
});

export const setupIntentPaymentMethodOptionsAcssDebitSchema = z.object({
  currency: z.union([z.literal("cad"), z.literal("usd")]).optional(),
  mandate_options: setupIntentPaymentMethodOptionsMandateOptionsAcssDebitSchema.optional(),
  verification_method: z
    .union([
      z.literal("automatic"),
      z.literal("instant"),
      z.literal("microdeposits"),
    ])
    .optional(),
});

export const skuSchema = z.object({
  active: z.boolean(),
  attributes: z.record(z.string()),
  created: z.number(),
  currency: z.string(),
  id: z.string(),
  image: z.string().optional().nullable(),
  inventory: skuInventorySchema,
  livemode: z.boolean(),
  metadata: z.record(z.string()),
  object: z.literal("sku"),
  package_dimensions: packageDimensionsSchema.optional().nullable(),
  price: z.number(),
  product: z.union([z.string(), productSchema]),
  updated: z.number(),
});

export const sourceOrderSchema = z.object({
  amount: z.number(),
  currency: z.string(),
  email: z.string().optional(),
  items: z.array(sourceOrderItemSchema).optional().nullable(),
  shipping: shippingSchema.optional(),
});

export const sourceTransactionSchema = z.object({
  ach_credit_transfer: sourceTransactionAchCreditTransferDataSchema.optional(),
  amount: z.number(),
  chf_credit_transfer: sourceTransactionChfCreditTransferDataSchema.optional(),
  created: z.number(),
  currency: z.string(),
  gbp_credit_transfer: sourceTransactionGbpCreditTransferDataSchema.optional(),
  id: z.string(),
  livemode: z.boolean(),
  object: z.literal("source_transaction"),
  paper_check: sourceTransactionPaperCheckDataSchema.optional(),
  sepa_credit_transfer: sourceTransactionSepaCreditTransferDataSchema.optional(),
  source: z.string(),
  status: z.string(),
  type: z.union([
    z.literal("ach_credit_transfer"),
    z.literal("ach_debit"),
    z.literal("alipay"),
    z.literal("bancontact"),
    z.literal("card"),
    z.literal("card_present"),
    z.literal("eps"),
    z.literal("giropay"),
    z.literal("ideal"),
    z.literal("klarna"),
    z.literal("multibanco"),
    z.literal("p24"),
    z.literal("sepa_debit"),
    z.literal("sofort"),
    z.literal("three_d_secure"),
    z.literal("wechat"),
  ]),
});

export const balanceSchema = z.object({
  available: z.array(balanceAmountSchema),
  connect_reserved: z.array(balanceAmountSchema).optional(),
  instant_available: z.array(balanceAmountSchema).optional(),
  issuing: balanceDetailSchema.optional(),
  livemode: z.boolean(),
  object: z.literal("balance"),
  pending: z.array(balanceAmountSchema),
});

export const cardGeneratedFromPaymentMethodDetailsSchema = z.object({
  card_present: paymentMethodDetailsCardPresentSchema.optional(),
  type: z.string(),
});

export const orderItemSchema = z.object({
  amount: z.number(),
  currency: z.string(),
  description: z.string(),
  object: z.literal("order_item"),
  parent: z.union([z.string(), skuSchema]).optional().nullable(),
  quantity: z.number().optional().nullable(),
  type: z.string(),
});

export const paymentIntentPaymentMethodOptionsSchema = z.object({
  acss_debit: paymentIntentPaymentMethodOptionsAcssDebitSchema.optional(),
  afterpay_clearpay: paymentMethodOptionsAfterpayClearpaySchema.optional(),
  alipay: paymentMethodOptionsAlipaySchema.optional(),
  bancontact: paymentMethodOptionsBancontactSchema.optional(),
  boleto: paymentMethodOptionsBoletoSchema.optional(),
  card: paymentIntentPaymentMethodOptionsCardSchema.optional(),
  card_present: paymentMethodOptionsCardPresentSchema.optional(),
  ideal: paymentMethodOptionsIdealSchema.optional(),
  oxxo: paymentMethodOptionsOxxoSchema.optional(),
  p24: paymentMethodOptionsP24Schema.optional(),
  sepa_debit: paymentIntentPaymentMethodOptionsSepaDebitSchema.optional(),
  sofort: paymentMethodOptionsSofortSchema.optional(),
  wechat_pay: paymentMethodOptionsWechatPaySchema.optional(),
});

export const paymentMethodDetailsCardSchema = z.object({
  brand: z.string().optional().nullable(),
  checks: paymentMethodDetailsCardChecksSchema.optional().nullable(),
  country: z.string().optional().nullable(),
  exp_month: z.number(),
  exp_year: z.number(),
  fingerprint: z.string().optional().nullable(),
  funding: z.string().optional().nullable(),
  installments: paymentMethodDetailsCardInstallmentsSchema
    .optional()
    .nullable(),
  last4: z.string().optional().nullable(),
  network: z.string().optional().nullable(),
  three_d_secure: threeDSecureDetailsSchema.optional().nullable(),
  wallet: paymentMethodDetailsCardWalletSchema.optional().nullable(),
});

export const planSchema = z.object({
  active: z.boolean(),
  aggregate_usage: z
    .union([
      z.literal("last_during_period"),
      z.literal("last_ever"),
      z.literal("max"),
      z.literal("sum"),
    ])
    .optional(),
  amount: z.number().optional().nullable(),
  amount_decimal: z.string().optional().nullable(),
  billing_scheme: z.union([z.literal("per_unit"), z.literal("tiered")]),
  created: z.number(),
  currency: z.string(),
  id: z.string(),
  interval: z.union([
    z.literal("day"),
    z.literal("month"),
    z.literal("week"),
    z.literal("year"),
  ]),
  interval_count: z.number(),
  livemode: z.boolean(),
  metadata: z.record(z.string()).optional().nullable(),
  nickname: z.string().optional().nullable(),
  object: z.literal("plan"),
  product: z
    .union([z.string(), productSchema, deletedProductSchema])
    .optional()
    .nullable(),
  tiers: z.array(planTierSchema).optional(),
  tiers_mode: z.union([z.literal("graduated"), z.literal("volume")]).optional(),
  transform_usage: transformUsageSchema.optional().nullable(),
  trial_period_days: z.number().optional().nullable(),
  usage_type: z.union([z.literal("licensed"), z.literal("metered")]),
});

export const portalFeaturesSchema = z.object({
  customer_update: portalCustomerUpdateSchema,
  invoice_history: portalInvoiceListSchema,
  payment_method_update: portalPaymentMethodUpdateSchema,
  subscription_cancel: portalSubscriptionCancelSchema,
  subscription_pause: portalSubscriptionPauseSchema,
  subscription_update: portalSubscriptionUpdateSchema,
});

export const priceSchema = z.object({
  active: z.boolean(),
  billing_scheme: z.union([z.literal("per_unit"), z.literal("tiered")]),
  created: z.number(),
  currency: z.string(),
  id: z.string(),
  livemode: z.boolean(),
  lookup_key: z.string().optional().nullable(),
  metadata: z.record(z.string()),
  nickname: z.string().optional().nullable(),
  object: z.literal("price"),
  product: z.union([z.string(), productSchema, deletedProductSchema]),
  recurring: recurringSchema.optional().nullable(),
  tax_behavior: z
    .union([
      z.literal("exclusive"),
      z.literal("inclusive"),
      z.literal("unspecified"),
    ])
    .optional(),
  tiers: z.array(priceTierSchema).optional(),
  tiers_mode: z.union([z.literal("graduated"), z.literal("volume")]).optional(),
  transform_quantity: transformQuantitySchema.optional().nullable(),
  type: z.union([z.literal("one_time"), z.literal("recurring")]),
  unit_amount: z.number().optional().nullable(),
  unit_amount_decimal: z.string().optional().nullable(),
});

export const setupIntentPaymentMethodOptionsSchema = z.object({
  acss_debit: setupIntentPaymentMethodOptionsAcssDebitSchema.optional(),
  card: setupIntentPaymentMethodOptionsCardSchema.optional(),
  sepa_debit: setupIntentPaymentMethodOptionsSepaDebitSchema.optional(),
});

export const sourceSchema = z.object({
  ach_credit_transfer: sourceTypeAchCreditTransferSchema.optional(),
  ach_debit: sourceTypeAchDebitSchema.optional(),
  acss_debit: sourceTypeAcssDebitSchema.optional(),
  alipay: sourceTypeAlipaySchema.optional(),
  amount: z.number().optional().nullable(),
  au_becs_debit: sourceTypeAuBecsDebitSchema.optional(),
  bancontact: sourceTypeBancontactSchema.optional(),
  card: sourceTypeCardSchema.optional(),
  card_present: sourceTypeCardPresentSchema.optional(),
  client_secret: z.string(),
  code_verification: sourceCodeVerificationFlowSchema.optional(),
  created: z.number(),
  currency: z.string().optional().nullable(),
  customer: z.string().optional(),
  eps: sourceTypeEpsSchema.optional(),
  flow: z.string(),
  giropay: sourceTypeGiropaySchema.optional(),
  id: z.string(),
  ideal: sourceTypeIdealSchema.optional(),
  klarna: sourceTypeKlarnaSchema.optional(),
  livemode: z.boolean(),
  metadata: z.record(z.string()).optional().nullable(),
  multibanco: sourceTypeMultibancoSchema.optional(),
  object: z.literal("source"),
  owner: sourceOwnerSchema.optional().nullable(),
  p24: sourceTypeP24Schema.optional(),
  receiver: sourceReceiverFlowSchema.optional(),
  redirect: sourceRedirectFlowSchema.optional(),
  sepa_debit: sourceTypeSepaDebitSchema.optional(),
  sofort: sourceTypeSofortSchema.optional(),
  source_order: sourceOrderSchema.optional(),
  statement_descriptor: z.string().optional().nullable(),
  status: z.string(),
  three_d_secure: sourceTypeThreeDSecureSchema.optional(),
  type: z.union([
    z.literal("ach_credit_transfer"),
    z.literal("ach_debit"),
    z.literal("acss_debit"),
    z.literal("alipay"),
    z.literal("au_becs_debit"),
    z.literal("bancontact"),
    z.literal("card"),
    z.literal("card_present"),
    z.literal("eps"),
    z.literal("giropay"),
    z.literal("ideal"),
    z.literal("klarna"),
    z.literal("multibanco"),
    z.literal("p24"),
    z.literal("sepa_debit"),
    z.literal("sofort"),
    z.literal("three_d_secure"),
    z.literal("wechat"),
  ]),
  usage: z.string().optional().nullable(),
  wechat: sourceTypeWechatSchema.optional(),
});

export const sourceMandateNotificationSchema = z.object({
  acss_debit: sourceMandateNotificationAcssDebitDataSchema.optional(),
  amount: z.number().optional().nullable(),
  bacs_debit: sourceMandateNotificationBacsDebitDataSchema.optional(),
  created: z.number(),
  id: z.string(),
  livemode: z.boolean(),
  object: z.literal("source_mandate_notification"),
  reason: z.string(),
  sepa_debit: sourceMandateNotificationSepaDebitDataSchema.optional(),
  source: sourceSchema,
  status: z.string(),
  type: z.string(),
});

export const subscriptionItemSchema = z.object({
  billing_thresholds: subscriptionItemBillingThresholdsSchema
    .optional()
    .nullable(),
  created: z.number(),
  id: z.string(),
  metadata: z.record(z.string()),
  object: z.literal("subscription_item"),
  price: priceSchema,
  quantity: z.number().optional(),
  subscription: z.string(),
  tax_rates: z.array(taxRateSchema).optional().nullable(),
});

export const subscriptionScheduleAddInvoiceItemSchema = z.object({
  price: z.union([z.string(), priceSchema, deletedPriceSchema]),
  quantity: z.number().optional().nullable(),
  tax_rates: z.array(taxRateSchema).optional().nullable(),
});

export const subscriptionScheduleConfigurationItemSchema = z.object({
  billing_thresholds: subscriptionItemBillingThresholdsSchema
    .optional()
    .nullable(),
  price: z.union([z.string(), priceSchema, deletedPriceSchema]),
  quantity: z.number().optional(),
  tax_rates: z.array(taxRateSchema).optional().nullable(),
});

export const subscriptionsResourcePendingUpdateSchema = z.object({
  billing_cycle_anchor: z.number().optional().nullable(),
  expires_at: z.number(),
  subscription_items: z.array(subscriptionItemSchema).optional().nullable(),
  trial_end: z.number().optional().nullable(),
  trial_from_plan: z.boolean().optional().nullable(),
});

export const billingPortalConfigurationSchema = z.object({
  active: z.boolean(),
  application: z.string().optional().nullable(),
  business_profile: portalBusinessProfileSchema,
  created: z.number(),
  default_return_url: z.string().optional().nullable(),
  features: portalFeaturesSchema,
  id: z.string(),
  is_default: z.boolean(),
  livemode: z.boolean(),
  object: z.literal("billing_portal.configuration"),
  updated: z.number(),
});

export const billingPortalSessionSchema = z.object({
  configuration: z.union([z.string(), billingPortalConfigurationSchema]),
  created: z.number(),
  customer: z.string(),
  id: z.string(),
  livemode: z.boolean(),
  locale: z
    .union([
      z.literal("auto"),
      z.literal("bg"),
      z.literal("cs"),
      z.literal("da"),
      z.literal("de"),
      z.literal("el"),
      z.literal("en"),
      z.literal("en-AU"),
      z.literal("en-CA"),
      z.literal("en-GB"),
      z.literal("en-IE"),
      z.literal("en-IN"),
      z.literal("en-NZ"),
      z.literal("en-SG"),
      z.literal("es"),
      z.literal("es-419"),
      z.literal("et"),
      z.literal("fi"),
      z.literal("fil"),
      z.literal("fr"),
      z.literal("fr-CA"),
      z.literal("hr"),
      z.literal("hu"),
      z.literal("id"),
      z.literal("it"),
      z.literal("ja"),
      z.literal("ko"),
      z.literal("lt"),
      z.literal("lv"),
      z.literal("ms"),
      z.literal("mt"),
      z.literal("nb"),
      z.literal("nl"),
      z.literal("pl"),
      z.literal("pt"),
      z.literal("pt-BR"),
      z.literal("ro"),
      z.literal("ru"),
      z.literal("sk"),
      z.literal("sl"),
      z.literal("sv"),
      z.literal("th"),
      z.literal("tr"),
      z.literal("vi"),
      z.literal("zh"),
      z.literal("zh-HK"),
      z.literal("zh-TW"),
    ])
    .optional(),
  object: z.literal("billing_portal.session"),
  on_behalf_of: z.string().optional().nullable(),
  return_url: z.string(),
  url: z.string(),
});
